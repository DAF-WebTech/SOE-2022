{"version":3,"sources":["../../../src/biodiversity/estuarine-marine-ecosystems/extent-change-estuarine.js"],"sourcesContent":["\"use strict\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\tconst keys = soefinding.findingJson.meta.fields.slice(-3)\r\n\r\n\tconst series1Items = soefinding.findingJson.data.filter(d => d.Indicator == \"Area (ha)\" && d[\"Drainage division\"] != \"Queensland\")\r\n\r\n\tsoefinding.findingContent.Queensland = {\r\n\t\tseries1: [],\r\n\t\tseries3: [],\r\n\t\tseries5: []\r\n\t}\r\n\r\n\tseries1Items.forEach(d => {\r\n\t\tif (d[\"Drainage division\"] != \"Other\") {\r\n\t\t\tsoefinding.findingContent[d[\"Drainage division\"]] = {\r\n\t\t\t\tseries2: [{\r\n\t\t\t\t\tname: \"Area (ha)\",\r\n\t\t\t\t\tdata: keys.map(k => d[k])\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsoefinding.findingContent.Queensland.series1.push({\r\n\t\t\tname: d[\"Drainage division\"],\r\n\t\t\tdata: keys.map(k => d[k])\r\n\t\t})\r\n\r\n\t})\r\n\r\n\r\n\t// first qld chart, extent by region\r\n\tconst options1 = soefinding.getDefaultStackedColumnChartOptions()\r\n\toptions1.chart.id = \"chart1\"\r\n\toptions1.tooltip.y = {\r\n\t\tformatter: val => val.toLocaleString()\r\n\t}\r\n\toptions1.xaxis.categories = keys\r\n\toptions1.xaxis.title.text = \"Estuarine wetland\"\r\n\toptions1.yaxis.title.text = \"Hectares\"\r\n\toptions1.yaxis.labels.formatter = val => val >= 1000000 ? `${val / 1000000}M` : val >= 1000 ? `${val / 1000}K` : val\r\n\r\n\r\n\tsoefinding.state.chart1 = {\r\n\t\tseries: soefinding.findingContent.Queensland.series1,\r\n\t\toptions: options1,\r\n\t\tchartactive: true\r\n\t}\r\n\r\n\t// first regional chart, extent for region\r\n\tconst options2 = JSON.parse(JSON.stringify(options1))\r\n\tdelete options2.chart.id\r\n\tdelete options2.chart.stacked\r\n\toptions2.yaxis.labels.formatter = options1.yaxis.labels.formatter\r\n\toptions2.tooltip.y = options1.tooltip.y\r\n\r\n\tsoefinding.state.chart2 = {\r\n\t\tseries: soefinding.findingContent.Gulf.series2, //arbitrary default, will be overwritten by onRegionChange\r\n\t\toptions: options2,\r\n\t\tchartactive: true\r\n\t}\r\n\r\n\r\n\r\n\tconst series3Items = soefinding.findingJson.data.filter(d => d.Indicator == \"Percent of pre-clear\")\r\n\r\n\tseries3Items.forEach(d => {\r\n\t\tif (d[\"Drainage division\"] != \"Other\" && d[\"Drainage division\"] != \"Queensland\") {\r\n\t\t\tsoefinding.findingContent[d[\"Drainage division\"]].series4 = [{\r\n\t\t\t\tname: \"Percent\t\",\r\n\t\t\t\tdata: keys.map(k => d[k])\r\n\t\t\t}]\r\n\t\t}\r\n\r\n\r\n\t\tsoefinding.findingContent.Queensland.series3.push({\r\n\t\t\tname: d[\"Drainage division\"],\r\n\t\t\tdata: keys.map(k => d[k])\r\n\t\t})\r\n\r\n\t})\r\n\r\n\t// chart 3 is the second qld chart, percentages\r\n\tconst options3 = soefinding.getDefaultColumnChartOptions()\r\n\toptions3.xaxis.categories = keys\r\n\toptions3.xaxis.tickPlacement = \"between\"\r\n\toptions3.xaxis.title.text = \"Estuarine wetland\"\r\n\toptions3.yaxis.forceNiceScale = false\r\n\toptions3.yaxis.labels.formatter = val => Math.round(val)\r\n\toptions3.yaxis.max = 100\r\n\toptions3.yaxis.title.text = \"Percentage of pre-clear extent remaining (%)\"\r\n\r\n\tsoefinding.state.chart3 = {\r\n\t\tseries: soefinding.findingContent.Queensland.series3,\r\n\t\toptions: options3,\r\n\t\tchartactive: true\r\n\t}\r\n\r\n\t// chart 4 is the second region chart\r\n\tconst options4 = soefinding.getDefaultColumnChartOptions()\r\n\toptions4.xaxis.categories = keys\r\n\toptions4.xaxis.title.text = \"Estuarine wetland\"\r\n\toptions4.yaxis.forceNiceScale = false\r\n\toptions4.yaxis.labels.formatter = val => Math.round(val)\r\n\toptions4.yaxis.max = 100\r\n\toptions4.yaxis.title.text = \"Percentage\"\r\n\r\n\r\n\tsoefinding.state.chart4 = {\r\n\t\tseries: soefinding.findingContent.Gulf.series4, //arbitrary default, will be overwritten by onRegionChange\r\n\t\toptions: options4,\r\n\t\tchartactive: true\r\n\t}\r\n\r\n\r\n\t// chart 5 is qld from the second dataset\r\n\tconst series5json = JSON.parse(document.getElementById(\"jsonData2\").textContent)\r\n\tconst years = series5json.meta.fields.slice(2)\r\n\tlet currRegion = \"\"\r\n\r\n\tseries5json.data.filter(d => d[\"Drainage division\"] != \"Other\").forEach(d => {\r\n\t\tif (d[\"Drainage division\"] != currRegion) {\r\n\t\t\tsoefinding.findingContent[d[\"Drainage division\"]].series5 = [{\r\n\t\t\t\tname: d[\"Wetland system\"],\r\n\t\t\t\tdata: years.map(k => d[k])\r\n\t\t\t}]\r\n\r\n\t\t\tcurrRegion = d[\"Drainage division\"]\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsoefinding.findingContent[d[\"Drainage division\"]].series5.push({\r\n\t\t\t\tname: d[\"Wetland system\"],\r\n\t\t\t\tdata: years.map(k => d[k])\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t})\r\n\r\n\tconst options5 = soefinding.getDefaultLineChartOptions()\r\n\toptions5.xaxis.categories = years\r\n\toptions5.xaxis.tickPlacement = \"between\"\r\n\toptions5.xaxis.title = \"Year\"\r\n\tdelete options5.yaxis.forceNiceScale\r\n\toptions5.yaxis.labels.formatter = val => `${val < 0 ? '−' : ''}${Math.abs(val).toFixed(0)}`, // a better minus sign\r\n\t\toptions5.yaxis.title = \"Change in hectares of wetland system\"\r\n\r\n\tsoefinding.state.chart5 = {\r\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series5,\r\n\t\toptions: options5,\r\n\t\tchartactive: true\r\n\t}\r\n\r\n\r\n\tconst YEAR = \"TODO YEAR\"\r\n\r\n\r\n\tnew Vue({\r\n\t\tel: \"#chartContainer\",\r\n\t\tdata: soefinding.state,\r\n\t\tcomputed: {\r\n\t\t\theading1: () => `Estuarine wetlands extent by region, ${YEAR}`,\r\n\t\t\theading2: function () {\r\n\t\t\t\treturn `Estuarine wetlands extent in ${this.currentRegionName}, ${YEAR}`\r\n\t\t\t},\r\n\t\t\theading3: () => `Estuarine wetlands percentage of pre-clear extent remaining, ${YEAR}`,\r\n\t\t\theading4: function () {\r\n\t\t\t\treturn `Estuarine wetlands percentage of pre-clear extent remaining in ${this.currentRegionName}, ${YEAR}`\r\n\t\t\t},\r\n\t\t\theading5: function () {\r\n\t\t\t\tlet retVal = \"Trends in change (loss or gain) in estuarine wetlands\"\r\n\t\t\t\tif (this.currentRegionName != \"Queensland\")\r\n\t\t\t\t\tretVal += ` in ${this.currentRegionName}`\r\n\t\t\t\treturn retVal\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tformatter1: val => val.toLocaleString(),\r\n\t\t\tformatter2: val => val.toLocaleString(undefined, { minimumFractionDigits: 1 }),\r\n\t\t\tformatter5: val => `${val < 0 ? '−' : ''}${Math.abs(val).toFixed(2)}`,\r\n\t\t}\r\n\t})\r\n\r\n\r\n\tsoefinding.onRegionChange = function () {\r\n\t\tconsole.log(\"onRegionChange\", soefinding.state.currentRegionName)\r\n\r\n\t\ttoggleDivDisplay()\r\n\r\n\t\t//options1.chart.stacked = soefinding.state.currentRegionName == \"Queensland\"\r\n\t\tif (soefinding.state.currentRegionName != \"Queensland\") {\r\n\t\t\tsoefinding.state.chart2.series = soefinding.findingContent[soefinding.state.currentRegionName].series2\r\n\t\t\tsoefinding.state.chart4.series = soefinding.findingContent[soefinding.state.currentRegionName].series4\r\n\r\n\t\t}\r\n\r\n\t\tsoefinding.state.chart5.series = soefinding.findingContent[soefinding.state.currentRegionName].series5\r\n\r\n\t\tif (soefinding.state.currentRegionName == \"Gulf\")\r\n\t\t\toptions5.yaxis.labels.formatter = val => `${val < 0 ? '−' : ''}${Math.abs(val).toFixed(2)}`\r\n\t\telse\r\n\t\t\toptions5.yaxis.labels.formatter = val => `${val < 0 ? '−' : ''}${Math.abs(val).toFixed(0)}`\r\n\r\n\r\n\t\tsoefinding.loadFindingHtml()\r\n\t}\r\n\r\n})\r\n\r\n\r\nfunction toggleDivDisplay() {\r\n\tdocument.getElementById(\"qldDiv\").style.display = soefinding.state.currentRegionName == \"Queensland\" ? \"block\" : \"none\"\r\n\tdocument.getElementById(\"regionDiv\").style.display = soefinding.state.currentRegionName != \"Queensland\" ? \"block\" : \"none\"\r\n}\r\n\r\n\r\n// all charts displayed by default, so hide the irrelevant ones\r\nwindow.addEventListener(\"load\", function () {\r\n\twindow.setTimeout(toggleDivDisplay, 1)\r\n})\r\n\r\n"],"mappings":"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","names":[]}
{"version":3,"sources":["../../../src/biodiversity/estuarine-marine-ecosystems/marine-parks-fish.js"],"sourcesContent":["\"use strict\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n\tconst series1Keys = [\"Marine conservation park zone\", \"Marine national park zone\", \"Marine preservation zone\",\n\t\t\"Buffer zone\", \"Scientific research zone\", \"Fish habitat area management level A\",\n\t\t\"Fish habitat area management level B\"]\n\n\tconst series1KeyLabels = [\n\t\t[\"Marine\", \"conservation\", \"park zone\"],\n\t\t[\"Marine national\", \"park zone\"],\n\t\t[\"Marine\", \"preservation\", \"zone\"],\n\t\t[\"Buffer zone\"],\n\t\t[\"Scientific\", \"research zone\"],\n\t\t[\"Fish habitat area\", \"management\", \"level A\"],\n\t\t[\"Fish habitat area\", \"management\", \"level B\"]\n\t] // there doesn't seem to be any way to get this done otherwise\n\n\tconst series1 = [{\n\t\tname: \"Hectares\",\n\t\tdata: series1Keys.map(k => soefinding.findingJson.data[0][k])\n\t}]\n\n\tconst options1 = soefinding.getDefaultColumnChartOptions()\n\toptions1.tooltip.y = { formatter: val => val.toLocaleString() }\n\toptions1.xaxis.categories = series1KeyLabels\n\toptions1.xaxis.title.text = \"Protected area type\"\n\toptions1.yaxis.title.text = \"Hectares\"\n\toptions1.yaxis.labels.formatter = val => val >= 1000000 ? `${val / 1000000}M` : `${val / 1000}K`\n\toptions1.yaxis.tickAmount = 6\n\n\tsoefinding.state.chart1 = {\n\t\toptions: options1,\n\t\tseries: series1,\n\t\tchartactive: true,\n\t}\n\n\n\tconst series2Keys = [\"Total all protection\", \"Outside all protection\"]\n\tconst series2 = series2Keys.map(k => soefinding.findingJson.data[0][k])\n\n\tconst options2 = soefinding.getDefaultPieChartOptions()\n\toptions2.chart.type = \"donut\"\n\toptions2.labels = series2Keys\n\toptions2.tooltip = {\n\t\ty: {\n\t\t\tformatter: (val, options) => {\n\t\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\n\t\t\t\treturn `${val.toLocaleString()}ha (${percent.toFixed(1)}%)`\n\t\t\t}\n\t\t}\n\t}\n\toptions2.xaxis.categories = [\"Protection\", \"Hectares\"]\n\n\tsoefinding.state.chart2 = {\n\t\toptions: options2,\n\t\tseries: series2,\n\t\tchartactive: true,\n\t}\n\n\n\tnew Vue({\n\t\tel: \"#chartContainer\",\n\t\tdata: soefinding.state,\n\t\tcomputed: {\n\t\t\theading1: () => \"Proportion of marine wetlands within protected areas, 2024 TODO fix year\",\n\t\t\theading2: () => \"Overall protection of marine wetlands, 2024 TODO fix year\",\n\t\t},\n\t\tmethods: {\n\t\t\tformatter1: val => val.toLocaleString(),\n\t\t}\n\t})\n})"],"mappings":"aAEA,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,GAAM,GAAc,CAAC,gCAAiC,4BAA6B,2BAClF,cAAe,2BAA4B,uCAC3C,wCAEK,EAAmB,CACxB,CAAC,SAAU,eAAgB,aAC3B,CAAC,kBAAmB,aACpB,CAAC,SAAU,eAAgB,QAC3B,CAAC,eACD,CAAC,aAAc,iBACf,CAAC,oBAAqB,aAAc,WACpC,CAAC,oBAAqB,aAAc,YAG/B,EAAU,CAAC,CAChB,KAAM,WACN,KAAM,EAAY,IAAI,GAAK,WAAW,YAAY,KAAK,GAAG,MAGrD,EAAW,WAAW,+BAC5B,EAAS,QAAQ,EAAI,CAAE,UAAW,GAAO,EAAI,kBAC7C,EAAS,MAAM,WAAa,EAC5B,EAAS,MAAM,MAAM,KAAO,sBAC5B,EAAS,MAAM,MAAM,KAAO,WAC5B,EAAS,MAAM,OAAO,UAAY,GAAO,GAAO,IAAU,GAAG,EAAM,OAAa,GAAG,EAAM,OACzF,EAAS,MAAM,WAAa,EAE5B,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,EACR,YAAa,IAId,GAAM,GAAc,CAAC,uBAAwB,0BACvC,EAAU,EAAY,IAAI,GAAK,WAAW,YAAY,KAAK,GAAG,IAE9D,EAAW,WAAW,4BAC5B,EAAS,MAAM,KAAO,QACtB,EAAS,OAAS,EAClB,EAAS,QAAU,CAClB,EAAG,CACF,UAAW,CAAC,EAAK,IAAY,CAC5B,GAAM,GAAU,EAAQ,QAAQ,cAAc,EAAQ,aAAa,GACnE,MAAO,GAAG,EAAI,uBAAuB,EAAQ,QAAQ,UAIxD,EAAS,MAAM,WAAa,CAAC,aAAc,YAE3C,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,EACR,YAAa,IAId,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,IAAM,2EAChB,SAAU,IAAM,6DAEjB,QAAS,CACR,WAAY,GAAO,EAAI","names":[]}
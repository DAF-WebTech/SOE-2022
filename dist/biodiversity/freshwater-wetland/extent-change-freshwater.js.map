{"version":3,"sources":["../../../src/biodiversity/freshwater-wetland/extent-change-freshwater.js"],"sourcesContent":["\"use strict\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n\tconst series1items = soefinding.findingJson.data.filter(d => d[\"Drainage division\"] != \"Queensland\" && d.Indicator == \"Area (ha)\")\n\tconst seriesNames = soefinding.findingJson.meta.fields.slice(2, 5)\n\tconst series1 = seriesNames.map(n => {\n\t\treturn {\n\t\t\tname: n,\n\t\t\tdata: series1items.map(d => d[n])\n\t\t}\n\t})\n\n\tconst options1 = soefinding.getDefaultStackedColumnChartOptions()\n\toptions1.tooltip.y = { formatter: val => val.toLocaleString() } \n\toptions1.xaxis.categories = series1items.map(d => {\n\t\tif (d[\"Drainage division\"].startsWith(\"North East\")) //separate into two lines\n\t\t\treturn [\n\t\t\t\td[\"Drainage division\"].substring(0, d[\"Drainage division\"].lastIndexOf(\" \")),\n\t\t\t\td[\"Drainage division\"].substring(d[\"Drainage division\"].lastIndexOf(\" \") + 1)\n\t\t\t]\n\t\telse\n\t\t\treturn d[\"Drainage division\"]\n\t})\n\toptions1.xaxis.title.text = \"Wetland System\"\n\toptions1.yaxis.labels.formatter = val => val >= 1000000 ? `${val / 1000000}M` : `${val / 1000}K`\n\toptions1.yaxis.forceNiceScale = false\n\toptions1.yaxis.min = 0\n\toptions1.yaxis.max = 3000000\n\toptions1.yaxis.tickAmount = 6\n\toptions1.yaxis.title.text = \"Hectares\"\n\toptions1.yaxis.labels.minWidth = 25\n\toptions1.chart.id = \"chart1\"\n\n\n\tsoefinding.state.chart1 = {\n\t\toptions: options1,\n\t\tseries: series1,\n\t\tchartactive: true,\n\t}\n\n\n\t// chart 2 pie chart for each region but not qld\n\tconst series2items = series1items.filter(d => d[\"Drainage division\"] != \"Other\")\n\tseries2items.forEach(d => {\n\t\tsoefinding.findingContent[d[\"Drainage division\"]] = {\n\t\t\tseries2: seriesNames.map(n => d[n])\n\t\t}\n\t})\n\n\tconst options2 = soefinding.getDefaultPieChartOptions()\n\toptions2.chart.type = \"donut\"\n\toptions2.chart.id = \"chart2\"\n\toptions2.labels = seriesNames\n\toptions2.xaxis = { categories: [\"Drainage division\", \"Hectares\"] }\n\toptions2.tooltip = {\n\t\ty: {\n\t\t\tformatter: (val, options) => {\n\t\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\n\t\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\n\t\t\t}\n\t\t}\n\t}\n\n\tsoefinding.findingContent.Queensland = { \n\t\tseries2: [1, 2, 3] \n\t}// dummy values, never used\n\n\n\tsoefinding.state.chart2 = {\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series2,\n\t\toptions: options2,\n\t\tchartactive: true,\n\t}\n\n\n\t// series 3 is shared between chart 3 (qld) and chart 4 (regional)\n\tconst series3Names = [...seriesNames, \"Total\"]\n\tconst series3items = soefinding.findingJson.data.filter(d => d[\"Drainage division\"] != \"Other\"\n\t\t&& d[\"Drainage division\"] != \"Queensland\"\n\t\t&& d.Indicator == \"Percent of pre-clear\")\n\tseries3items.forEach(d => {\n\t\tsoefinding.findingContent[d[\"Drainage division\"]].series3 = [{\n\t\t\tname: \"Percent\",\n\t\t\tdata: series3Names.map(n => d[n])\n\t\t}]\n\t})\n\t// qld is different\n\tsoefinding.findingContent.Queensland.series3 = soefinding.findingJson.data\n\t\t.filter(d => d.Indicator == \"Percent of pre-clear\")\n\t\t.map(d => {\n\t\t\treturn {\n\t\t\t\tname: d[\"Drainage division\"],\n\t\t\t\tdata: series3Names.map(n => d[n])\n\t\t\t}\n\t\t})\n\n\tconst options3 = soefinding.getDefaultColumnChartOptions()\n\toptions3.tooltip.y = { formatter: val => val } \n\toptions3.xaxis.categories = series3Names\n\toptions3.xaxis.title.text = \"Wetland system\"\n\tdelete options3.xaxis.tickPlacement\n\toptions3.yaxis.title.text = \"Percent\"\n\toptions3.yaxis.forceNiceScale = false\n\toptions3.yaxis.min = 0\n\toptions3.yaxis.max = 100\n\toptions3.yaxis.tickAmount = 5\n\toptions3.yaxis.labels.formatter = val => Math.round(val)\n\n\n\tsoefinding.state.chart3 = {\n\t\toptions: options3,\n\t\tseries: soefinding.findingContent.Queensland.series3,\n\t\tchartactive: true,\n\t}\n\n\n\tsoefinding.state.chart4 = {\n\t\toptions: options3,\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series3,\n\t\tchartactive: true,\n\t}\n\n\n\tlet series5currentRegion = \"\"\n\tconst series5Parse = JSON.parse(document.getElementById(\"jsonData2\").textContent)\n\tconst series5Keys = series5Parse.meta.fields.slice(2) \n\tsoefinding.findingContent.Other = {} // not used but it's simpler if it's there\n\tseries5Parse.data.forEach(d => {\n\t\tif (series5currentRegion != d[\"Drainage division\"]) {\n\t\t\tsoefinding.findingContent[d[\"Drainage division\"]].series5 = [{\n\t\t\t\tname: d[\"Wetland system\"],\n\t\t\t\tdata: series5Keys.map(k => d[k])\n\t\t\t}]\n\n\t\t\tseries5currentRegion = d[\"Drainage division\"]\n\t\t}\n\t\telse\n\t\t\tsoefinding.findingContent[d[\"Drainage division\"]].series5.push({\n\t\t\t\tname: d[\"Wetland system\"],\n\t\t\t\tdata: series5Keys.map(k => d[k])\n\t\t\t})\n\t})\n\n\tconst options5 = soefinding.getDefaultLineChartOptions()\n\toptions5.xaxis.categories = series5Keys.map(k => k.replace(\"-\", \"â€“\")) //ndash\n\toptions5.xaxis.title = \"Year\"\n\toptions5.yaxis.title = \"Change in hectares\"\n\tdelete options5.yaxis.forceNiceScale\n\toptions5.yaxis.labels.formatter = val => soefinding.convertToUnicodeMinus(val)\n\n\tsoefinding.state.chart5 = {\n\t\toptions: options5,\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series5,\n\t\tchartactive: true,\n\t}\n\n\n\n\n\tconst YEAR = \"TODO YEAR\"\n\n\tsoefinding.vueApp = new Vue({\n\t\tel: \"#chartContainer\",\n\t\tdata: soefinding.state,\n\t\tcomputed: {\n\t\t\theading1: () => `Freshwater wetland systems extent by region, 2024  ${YEAR}`,\n\t\t\theading2: () => `Proportion of freshwater wetland systems extent in ${soefinding.state.currentRegionName}, ${YEAR}`,\n\t\t\theading3: () => `\"Freshwater wetland systems percentage of pre-clear extent remaining, ${YEAR}`,\n\t\t\theading4: () => `Freshwater wetland system percentage of pre-clear extent remaining in ${soefinding.state.currentRegionName}, ${YEAR}`,\n\t\t\theading5: function() {\n\t\t\t\treturn `Trends in change (loss or gain) in freshwater wetland systems in ${this.currentRegionName}` \n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tformatter1: val => val.toLocaleString(),\n\t\t\tformatter3: val => val.toFixed(1),\n\t\t\tformatter5: val => soefinding.convertToUnicodeMinus(val)\n\t\t}\n\t})\n\n\n\twindow.soefinding.onRegionChange = function () {\n\t\t// set the data series in each of the vue apps, for the current region\n\n\t\ttoggleDisplayDivs()\n\n\t\t// chart 2\n\t\tif (this.vueApp.currentRegionName != \"Queensland\") {\n\t\t\tthis.vueApp.chart2.series = this.findingContent[this.state.currentRegionName].series2\n\t\t\tthis.vueApp.chart4.series = this.findingContent[this.state.currentRegionName].series3\n\t\t}\n\n\n\t\tthis.vueApp.chart5.series = this.findingContent[this.state.currentRegionName].series5\n\n\n\n\t\tsoefinding.loadFindingHtml()\n\t}\n})\n\n\nfunction toggleDisplayDivs() {\n\tArray.from(document.querySelectorAll(\"div.displayQld\")).forEach( function(d) {\n\t\td.style.display = soefinding.state.currentRegionName == \"Queensland\" ? \"block\" : \"none\"\n\t})\n\tArray.from(document.querySelectorAll(\"div.displayRegional\")).forEach( function(d) {\n\t\td.style.display = soefinding.state.currentRegionName != \"Queensland\" ? \"block\" : \"none\"\n\t})\n\n}\n\nwindow.addEventListener(\"load\", function() {\n\twindow.setTimeout(toggleDisplayDivs, 1)\n})\n"],"mappings":"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","names":[]}
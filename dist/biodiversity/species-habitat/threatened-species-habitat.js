"use strict";document.addEventListener("DOMContentLoaded",function(){let g=soefinding.findingJson.meta.fields.slice(3),f=g.at(-1),n={};soefinding.findingJson.data.forEach(e=>{n[e.Region]||(n[e.Region]=[]),e.Remnant=e[f],e["Non-remnant"]=e["Pre-clear"]-e.Remnant,n[e.Region].push(e)});let c=n.Queensland.map(e=>e.Group),l=["Pre-clear","Remnant"];for(let e in n)soefinding.findingContent[e]={series1:l.map(t=>({name:t,data:n[e].map(i=>i[t])}))};function d(e){let t=e.split(" "),i=[t.shift()];for(;t.length>0;)i[i.length-1].length+t[0].length<15?i[i.length-1]+=" "+t.shift():i.push(t.shift());return i}let s=soefinding.getDefaultColumnChartOptions();s.chart.id="chart1",s.xaxis.categories=c.map(e=>d(e)),s.xaxis.title.text=`F${soefinding.biota.slice(1)} Group`,s.yaxis.title.text="Hectares",s.yaxis.labels.formatter=e=>e>=1e6?`${e/1e6}M`:e>=1e3?`${e/1e3}K`:e,s.tooltip.y={formatter:e=>`${e.toLocaleString()} ha`},soefinding.state.chart1={options:s,series:soefinding.findingContent[soefinding.state.currentRegionName].series1,chartactive:!0};let h=["Remnant","Non-remnant"];for(let e in n)soefinding.findingContent[e].series2=h.map(t=>({name:t,data:n[e].map(i=>i[t])}));let o=soefinding.getPercentStackedBarChartOptions();o.chart.id="chart2",o.xaxis.categories=c.map(e=>d(e)),o.xaxis.title.text=`F${soefinding.biota.slice(1)} Group`,o.yaxis.title.text="Proportion",o.tooltip.y={formatter:e=>`${e.toLocaleString()}  ha.`},delete o.yaxis.forceNiceScale,soefinding.state.chart2={options:o,series:soefinding.findingContent[soefinding.state.currentRegionName].series2,chartactive:!0},soefinding.state.species={},c.forEach((e,t)=>{soefinding.state.species[e]={checked:t==0,name:e,chart3active:!0,chart4active:!0,regions:{},nullSeries:!1};for(let i in n){let p=n[i].find(r=>r.Group==e);soefinding.state.species[e].regions[i]={isSeries3Null:!1,series3:[{name:"Habitat",data:g.map(r=>p[r])}]},soefinding.state.species[e].regions[i].series3[0].data.every(r=>r==0)&&(soefinding.state.species[e].regions[i].isSeries3Null=!0)}});let a=soefinding.getDefaultLineChartOptions();a.chart.id="chart3",a.xaxis.categories=g,a.xaxis.title.text="Year",a.yaxis.title.text="Hectares",a.yaxis.labels.formatter=s.yaxis.labels.formatter,a.yaxis.showForNullSeries=!1,a.tooltip.y={formatter:s.tooltip.y.formatter},soefinding.state.options3=a,c.forEach(e=>{soefinding.state.species[e].regions.Queensland.series4=soefinding.findingJson.data.filter(t=>t.Group==e&&t.Region!="Queensland").map(t=>t["Pre-clear"])}),soefinding.state.options4=soefinding.getDefaultPieChartOptions(),soefinding.state.options4.labels=Object.keys(n).slice(1),soefinding.state.options4.tooltip={y:{formatter:(e,t)=>{let i=t.globals.seriesPercent[t.seriesIndex][0];return`${e.toLocaleString()} ha (${i.toFixed(1)}%)`}}},soefinding.state.options4.xaxis.categories=["Region","Pre-clear (ha)"],new Vue({el:"#chartContainer",data:soefinding.state,computed:{heading1:function(){return`Area of ${this.currentRegionName} pre-clear threatened ${soefinding.biota} habitat and ${f} remnant habitat by species group`},heading2:function(){return`Proportion of ${this.currentRegionName} pre-clear threatened ${soefinding.biota} habitat that is remnant and non-remnant habitat, ${f}`},heading4:function(){return`Proportion of pre-clear threatened ${this.currentSpecies} habitat by bioregion`}},methods:{formatter1:e=>e.toLocaleString()}}),window.soefinding.onRegionChange=function(){soefinding.state.chart1.series=this.findingContent[this.state.currentRegionName].series1,ApexCharts.exec("chart1","updateSeries",this.findingContent[this.state.currentRegionName].series1),soefinding.state.chart2.series=this.findingContent[this.state.currentRegionName].series2,ApexCharts.exec("chart2","updateSeries",this.findingContent[this.state.currentRegionName].series2),soefinding.loadFindingHtml()}});
//# sourceMappingURL=threatened-species-habitat.js.map
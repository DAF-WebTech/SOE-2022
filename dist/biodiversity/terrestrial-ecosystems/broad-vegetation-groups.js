"use strict";document.addEventListener("DOMContentLoaded",function(){soefinding.findingJson.data.sort(function(a,b){return a["Broad vegetation group number"]-b["Broad vegetation group number"]});const fields=soefinding.findingJson.meta.fields.slice(-2);const qldTotal={};soefinding.findingJson.data.forEach(d=>{d.name=`${d["Broad vegetation group number"]}. ${d["Broad vegetation group label"].replace("-","\u2014")}`;if(!soefinding.findingContent[d.Bioregion]){soefinding.findingContent[d.Bioregion]={series1:fields.map(f=>{return{name:f,data:[]}}),groups:[],series2:fields.map(f=>0)}}fields.forEach((f,i)=>{soefinding.findingContent[d.Bioregion].series1[i].data.push(d[f]);soefinding.findingContent[d.Bioregion].series2[i]+=d[f]});soefinding.findingContent[d.Bioregion].groups.push(d.name);if(!qldTotal[d.name])qldTotal[d.name]=fields.map(f=>0);fields.forEach((f,i)=>qldTotal[d.name][i]+=d[f])});soefinding.findingContent.Queensland={series1:fields.map((f,i)=>{return{name:f,data:Object.keys(qldTotal).map(q=>{return qldTotal[q][i]})}}),groups:Object.keys(qldTotal),series2:fields.map((f,i)=>{return Object.keys(qldTotal).reduce((acc,curr)=>{return acc+qldTotal[curr][i]},0)})};const options1=soefinding.getDefaultColumnChartOptions();options1.chart.id="chart1";options1.tooltip.y={formatter:val=>val.toLocaleString()};options1.xaxis.categories=soefinding.findingContent[soefinding.state.currentRegionName].groups;options1.xaxis.labels.trim=true;options1.xaxis.labels.hideOverlappingLabels=false;options1.xaxis.tickPlacement="between";options1.xaxis.title.text="Hectares";options1.yaxis.labels.formatter=val=>val>=1e6?`${val/1e6}M`:`${val/1e3}k`;options1.yaxis.title.text="Broad Vegetation Group";soefinding.state.chart1={options:options1,series:soefinding.findingContent[soefinding.state.currentRegionName].series1,chartactive:true};const options2=soefinding.getDefaultPieChartOptions();options2.chart.type="donut";options2.chart.id="chart2";options2.labels=fields;options2.xaxis.categories=["Type","Area (ha)"];options2.tooltip={y:{formatter:(val,options)=>{const percent=options.globals.seriesPercent[options.seriesIndex][0];return`${val.toLocaleString()} (${percent.toFixed(1)}%)`}}};soefinding.state.chart2={options:options2,series:soefinding.findingContent[soefinding.state.currentRegionName].series2,chartactive:true};new Vue({el:"#chartContainer",data:soefinding.state,computed:{heading1:()=>`Hectares of broad vegetation groups in protected areas in ${soefinding.state.currentRegionName}, 2017  TODO fix year`,heading2:()=>`Proportion of total remnant vegetation in protected areas in ${soefinding.state.currentRegionName}, 2017 TODO fix year`},methods:{formatter1:val=>val.toLocaleString()}});window.soefinding.onRegionChange=function(){ApexCharts.exec("chart1","updateSeries",this.findingContent[this.state.currentRegionName].series1);soefinding.state.chart1.series=this.findingContent[this.state.currentRegionName].series1;ApexCharts.exec("chart1","updateOptions",{xaxis:{categories:this.findingContent[this.state.currentRegionName].groups}},true);options1.xaxis.categories=this.findingContent[this.state.currentRegionName].groups;ApexCharts.exec("chart2","updateSeries",this.findingContent[this.state.currentRegionName].series2);soefinding.state.chart2.series=this.findingContent[this.state.currentRegionName].series2;soefinding.loadFindingHtml()}});
//# sourceMappingURL=broad-vegetation-groups.js.map
{"version":3,"sources":["../../../src/biodiversity/terrestrial-ecosystems/broad-vegetation-groups.js"],"sourcesContent":["\"use strict\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n\tsoefinding.findingJson.data.sort(function (a, b) {\n\t\treturn a[\"Broad vegetation group number\"] - b[\"Broad vegetation group number\"]\n\t})\n\n\tconst fields = soefinding.findingJson.meta.fields.slice(-2) // last 2, for chart 1\n\tconst qldTotal = {}\n\tsoefinding.findingJson.data.forEach(d => {\n\t\td.name = `${d[\"Broad vegetation group number\"]}. ${d[\"Broad vegetation group label\"].replace(\"-\", \"â€”\")}` // em dash\n\n\t\tif (!soefinding.findingContent[d.Bioregion]) {\n\t\t\tsoefinding.findingContent[d.Bioregion] = {\n\t\t\t\tseries1: fields.map(f => { return { name: f, data: [] } }),\n\t\t\t\tgroups: [],\n\t\t\t\tseries2: fields.map(f => 0)\n\t\t\t}\n\t\t}\n\n\t\tfields.forEach((f, i) => {\n\t\t\tsoefinding.findingContent[d.Bioregion].series1[i].data.push(d[f])\n\t\t\tsoefinding.findingContent[d.Bioregion].series2[i] += d[f]\n\t\t})\n\t\tsoefinding.findingContent[d.Bioregion].groups.push(d.name)\n\n\t\tif (!qldTotal[d.name])\n\t\t\tqldTotal[d.name] = fields.map(f => 0)\n\t\tfields.forEach((f, i) => qldTotal[d.name][i] += d[f])\n\t})\n\n\t// add qld item to regions\n\tsoefinding.findingContent.Queensland = {\n\t\tseries1: fields.map((f, i) => {\n\t\t\treturn {\n\t\t\t\tname: f,\n\t\t\t\tdata: Object.keys(qldTotal).map(q => {\n\t\t\t\t\treturn qldTotal[q][i]\n\t\t\t\t})\n\t\t\t}\n\t\t}),\n\t\tgroups: Object.keys(qldTotal),\n\t\tseries2: fields.map((f, i) => {\n\t\t\treturn Object.keys(qldTotal).reduce((acc, curr) => {\n\t\t\t\treturn acc + qldTotal[curr][i]\n\t\t\t}, 0)\n\t\t})\n\t}\n\n\n\tconst options1 = soefinding.getDefaultColumnChartOptions()\n\toptions1.chart.id = \"chart1\"\n\toptions1.tooltip.y = { formatter: val => val.toLocaleString() } \n\toptions1.xaxis.categories = soefinding.findingContent[soefinding.state.currentRegionName].groups\n\toptions1.xaxis.labels.trim = true\n\toptions1.xaxis.labels.hideOverlappingLabels = false\n\t\n\toptions1.xaxis.tickPlacement = \"between\" // not a good option, but it fixes a bug\n\t// where the chart xaxis did not redraw correctly when swapping between regions.,\n\t// and then you click on one of the legends\n\n\toptions1.xaxis.title.text = \"Hectares\"\n\n\toptions1.yaxis.labels.formatter = val => val >= 1000000 ? `${val / 1000000}M` : `${val / 1000}k`\n\t//\tthese options make it look better, but fail if you select a region\n\t// \toptions1.yaxis.forceNiceScale = false\n\t// \toptions1.yaxis.max = 30000000\n\t// \toptions1.yaxis.min = 0\n\t// \toptions1.yaxis.tickAmount = 6\n\toptions1.yaxis.title.text = \"Broad Vegetation Group\"\n\n\tsoefinding.state.chart1 = {\n\t\toptions: options1,\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series1,\n\t\tchartactive: true,\n\t}\n\n\n\tconst options2 = soefinding.getDefaultPieChartOptions()\n\toptions2.chart.type = \"donut\"\n\toptions2.chart.id = \"chart2\"\n\toptions2.labels = fields\n\toptions2.xaxis.categories = [\"Type\", \"Area (ha)\"] // not needed for chart, but vue uses them for table headings\n\toptions2.tooltip = {\n\t\ty: {\n\t\t\tformatter: (val, options) => {\n\t\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\n\t\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\n\t\t\t}\n\t\t}\n\t}\n\n\n\tsoefinding.state.chart2 = {\n\t\toptions: options2,\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series2,\n\t\tchartactive: true,\n\t}\n\n\tnew Vue({\n\t\tel: \"#chartContainer\",\n\t\tdata: soefinding.state,\n\t\tcomputed: {\n\t\t\theading1: () => `Hectares of broad vegetation groups in protected areas in ${soefinding.state.currentRegionName}, 2017  TODO fix year`,\n\t\t\theading2: () => `Proportion of total remnant vegetation in protected areas in ${soefinding.state.currentRegionName}, 2017 TODO fix year`\n\t\t},\n\t\tmethods: {\n\t\t\tformatter1: val => val.toLocaleString()\n\t\t}\n\t})\n\n\n\twindow.soefinding.onRegionChange = function () {\n\t\t// set the data series in each of the vue apps, for the current region\n\n\t\t// chart 1\n\t\tApexCharts.exec(\"chart1\", \"updateSeries\", this.findingContent[this.state.currentRegionName].series1)\n\t\tsoefinding.state.chart1.series = this.findingContent[this.state.currentRegionName].series1\n\n\t\t// but we also need this for the chart to update\n\t\tApexCharts.exec(\"chart1\", \"updateOptions\", {\n\t\t\txaxis: { categories: this.findingContent[this.state.currentRegionName].groups }\n\t\t}, true)\n\t\t// this works on the table\n\t\toptions1.xaxis.categories = this.findingContent[this.state.currentRegionName].groups\n\n\t\t// chart 2, pie chart, labels stay the same\n\t\tApexCharts.exec(\"chart2\", \"updateSeries\", this.findingContent[this.state.currentRegionName].series2)\n\t\tsoefinding.state.chart2.series = this.findingContent[this.state.currentRegionName].series2\n\n\n\t\tsoefinding.loadFindingHtml()\n\t}\n})"],"mappings":"aAEA,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,WAAW,YAAY,KAAK,KAAK,SAAU,EAAG,EAAG,CAChD,MAAO,GAAE,iCAAmC,EAAE,mCAG/C,GAAM,GAAS,WAAW,YAAY,KAAK,OAAO,MAAM,IAClD,EAAW,GACjB,WAAW,YAAY,KAAK,QAAQ,GAAK,CACxC,EAAE,KAAO,GAAG,EAAE,qCAAqC,EAAE,gCAAgC,QAAQ,IAAK,YAE7F,WAAW,eAAe,EAAE,YAChC,YAAW,eAAe,EAAE,WAAa,CACxC,QAAS,EAAO,IAAI,GAAc,EAAE,KAAM,EAAG,KAAM,MACnD,OAAQ,GACR,QAAS,EAAO,IAAI,GAAK,KAI3B,EAAO,QAAQ,CAAC,EAAG,IAAM,CACxB,WAAW,eAAe,EAAE,WAAW,QAAQ,GAAG,KAAK,KAAK,EAAE,IAC9D,WAAW,eAAe,EAAE,WAAW,QAAQ,IAAM,EAAE,KAExD,WAAW,eAAe,EAAE,WAAW,OAAO,KAAK,EAAE,MAEhD,EAAS,EAAE,OACf,GAAS,EAAE,MAAQ,EAAO,IAAI,GAAK,IACpC,EAAO,QAAQ,CAAC,EAAG,IAAM,EAAS,EAAE,MAAM,IAAM,EAAE,MAInD,WAAW,eAAe,WAAa,CACtC,QAAS,EAAO,IAAI,CAAC,EAAG,IAChB,EACN,KAAM,EACN,KAAM,OAAO,KAAK,GAAU,IAAI,GACxB,EAAS,GAAG,OAItB,OAAQ,OAAO,KAAK,GACpB,QAAS,EAAO,IAAI,CAAC,EAAG,IAChB,OAAO,KAAK,GAAU,OAAO,CAAC,EAAK,IAClC,EAAM,EAAS,GAAM,GAC1B,KAKL,GAAM,GAAW,WAAW,+BAC5B,EAAS,MAAM,GAAK,SACpB,EAAS,QAAQ,EAAI,CAAE,UAAW,GAAO,EAAI,kBAC7C,EAAS,MAAM,WAAa,WAAW,eAAe,WAAW,MAAM,mBAAmB,OAC1F,EAAS,MAAM,OAAO,KAAO,GAC7B,EAAS,MAAM,OAAO,sBAAwB,GAE9C,EAAS,MAAM,cAAgB,UAI/B,EAAS,MAAM,MAAM,KAAO,WAE5B,EAAS,MAAM,OAAO,UAAY,GAAO,GAAO,IAAU,GAAG,EAAM,OAAa,GAAG,EAAM,OAMzF,EAAS,MAAM,MAAM,KAAO,yBAE5B,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,WAAW,eAAe,WAAW,MAAM,mBAAmB,QACtE,YAAa,IAId,GAAM,GAAW,WAAW,4BAC5B,EAAS,MAAM,KAAO,QACtB,EAAS,MAAM,GAAK,SACpB,EAAS,OAAS,EAClB,EAAS,MAAM,WAAa,CAAC,OAAQ,aACrC,EAAS,QAAU,CAClB,EAAG,CACF,UAAW,CAAC,EAAK,IAAY,CAC5B,GAAM,GAAU,EAAQ,QAAQ,cAAc,EAAQ,aAAa,GACnE,MAAO,GAAG,EAAI,qBAAqB,EAAQ,QAAQ,UAMtD,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,WAAW,eAAe,WAAW,MAAM,mBAAmB,QACtE,YAAa,IAGd,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,IAAM,6DAA6D,WAAW,MAAM,yCAC9F,SAAU,IAAM,gEAAgE,WAAW,MAAM,yCAElG,QAAS,CACR,WAAY,GAAO,EAAI,oBAKzB,OAAO,WAAW,eAAiB,UAAY,CAI9C,WAAW,KAAK,SAAU,eAAgB,KAAK,eAAe,KAAK,MAAM,mBAAmB,SAC5F,WAAW,MAAM,OAAO,OAAS,KAAK,eAAe,KAAK,MAAM,mBAAmB,QAGnF,WAAW,KAAK,SAAU,gBAAiB,CAC1C,MAAO,CAAE,WAAY,KAAK,eAAe,KAAK,MAAM,mBAAmB,SACrE,IAEH,EAAS,MAAM,WAAa,KAAK,eAAe,KAAK,MAAM,mBAAmB,OAG9E,WAAW,KAAK,SAAU,eAAgB,KAAK,eAAe,KAAK,MAAM,mBAAmB,SAC5F,WAAW,MAAM,OAAO,OAAS,KAAK,eAAe,KAAK,MAAM,mBAAmB,QAGnF,WAAW","names":[]}
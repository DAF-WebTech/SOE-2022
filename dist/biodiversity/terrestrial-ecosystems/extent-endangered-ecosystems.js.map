{"version":3,"sources":["../../../src/biodiversity/terrestrial-ecosystems/extent-endangered-ecosystems.js"],"sourcesContent":["\"use strict\";\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n\tconst fields = [\"Endangered\", \"Of concern\", \"No concern at present\"]\n\tconst yearKeys = soefinding.findingJson.meta.fields.slice(6)\n\tconst latestYear = yearKeys.at(-1)\n\tconst bioregions = new Set()\n\n\n\tsoefinding.findingContent.Queensland = {\n\t\tseries1: fields.map(f => { return { name: f, data: [] } }),\n\t\tseries2: fields.map(f => { return { name: f, data: [] } }),\n\t\tseries3: fields.map(f => { return { name: f, data: yearKeys.map(y => 0) } }),\n\t\tseries4: [0, 0, 0], // not used, but we need a default\n\t\tseries5: [0, 0, 0], // not used, but we need a default\n\t}\n\tsoefinding.findingJson.data.forEach((d, i) => {\n\t\t// the data comes in groups of 3\n\t\t// qld only for charts 1 and 2\n\t\tsoefinding.findingContent.Queensland.series1[i % 3].data.push(d[\"Number of regional ecosystem\"])\n\t\tsoefinding.findingContent.Queensland.series2[i % 3].data.push(d[latestYear])\n\t\tbioregions.add(d.Bioregion)\n\n\t\t// chart 3 qld\n\t\tyearKeys.forEach((y, j) => soefinding.findingContent.Queensland.series3[i % 3].data[j] += d[y])\n\n\t\t// chart 3, 4, 5 each region\n\t\tif (!soefinding.findingContent[d.Bioregion]) {\n\t\t\tsoefinding.findingContent[d.Bioregion] = {\n\t\t\t\tseries3: [],\n\t\t\t\tseries4: [],\n\t\t\t\tseries5: [],\n\t\t\t}\n\t\t}\n\t\tsoefinding.findingContent[d.Bioregion].series3.push({\n\t\t\tname: d[\"Biodiversity Status\"],\n\t\t\tdata: yearKeys.map(y => d[y])\n\t\t})\n\t\tsoefinding.findingContent[d.Bioregion].series4.push(d[\"Number of regional ecosystem\"])\n\t\tsoefinding.findingContent[d.Bioregion].series5.push(d[latestYear])\n\n\t})\n\n\n\tconst options1 = soefinding.getDefaultStackedColumnChartOptions()\n\toptions1.chart.height = 450\n\toptions1.xaxis.categories = [...bioregions]\n\toptions1.xaxis.title.text = \"Bioregion\"\n\toptions1.yaxis.title.text = \"Number of regional ecosystems\"\n\n\tsoefinding.state.chart1 = {\n\t\toptions: options1,\n\t\tseries: soefinding.findingContent.Queensland.series1,\n\t\tchartactive: true,\n\t}\n\n\n\tconst options2 = JSON.parse(JSON.stringify(options1))\n\toptions2.yaxis.labels.formatter = val => `${val / 1000000}M`\n\toptions2.yaxis.title.text = \"Hectares\"\n\n\tsoefinding.state.chart2 = {\n\t\toptions: options2,\n\t\tseries: soefinding.findingContent.Queensland.series2,\n\t\tchartactive: true,\n\t}\n\n\n\tconst options3 = soefinding.getDefaultLineChartOptions()\n\toptions3.chart.id = \"chart3\"\n\toptions3.xaxis.title.text = \"Year\"\n\toptions3.yaxis.title.text = \"Hectares\"\n\toptions3.xaxis.categories = yearKeys\n\toptions3.yaxis.labels.formatter = val => {\n\t\tif (val >= 1000000)\n\t\t\treturn `${val / 1000000}M`\n\t\telse\n\t\t\treturn `${val / 1000}K`\n\t}\n\toptions3.tooltip.y = { formatter: val => val.toLocaleString() }\n\n\tsoefinding.state.chart3 = {\n\t\toptions: options3,\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series3,\n\t\tchartactive: true,\n\t}\n\n\n\tconst options4 = soefinding.getDefaultPieChartOptions()\n\toptions4.chart.type = \"donut\"\n\toptions4.labels = fields\n\toptions4.xaxis.categories = [\"Biodiversity status\", \"Number of regional ecosystems\"]\n\toptions4.tooltip.y = {\n\t\tformatter: (val, options) => {\n\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\n\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\n\t\t}\n\t}\n\n\tsoefinding.state.chart4 = {\n\t\toptions: options4,\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series4,\n\t\tchartactive: true,\n\t}\n\n\tsoefinding.state.chart5 = {\n\t\toptions: options4, //reÃ¼se\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series5,\n\t\tchartactive: true,\n\t}\n\n\n\tnew Vue({\n\t\tel: \"#chartContainer\",\n\t\tdata: soefinding.state,\n\t\tcomputed: {\n\t\t\theading1: () => `Proportion of regional ecosystems by biodiversity status, ${latestYear}`,\n\t\t\theading2: () => `Proportion area of biodiversity status, ${latestYear}`,\n\t\t\theading3: () => `Trends in extent of remnant vegetation, by biodiversity status in ${soefinding.state.currentRegionName}`,\n\t\t\theading4: () => `Proportion of regional ecosystems by biodiversity status in ${soefinding.state.currentRegionName}, ${latestYear}`,\n\t\t\theading5: () => `Proportion area of biodiversity status in ${soefinding.state.currentRegionName}, ${latestYear}`\n\t\t},\n\t\tmethods: {\n\t\t\tformatter1: val => val.toLocaleString()\n\t\t}\n\t})\n\n\n\n\twindow.soefinding.onRegionChange = function () {\n\t\t// set the data series in each of the vue apps, for the current region\n\t\t// chart 3\n\t\tApexCharts.exec(\"chart3\", \"updateSeries\", this.findingContent[this.state.currentRegionName].series3)\n\t\tsoefinding.state.chart3.series = this.findingContent[this.state.currentRegionName].series3\n\n\t\tsoefinding.state.chart4.series = this.findingContent[this.state.currentRegionName].series4\n\t\tApexCharts.exec(\"chart4\", \"updateSeries\", this.findingContent[this.state.currentRegionName].series4)\n\t\tApexCharts.exec(\"chart4\", \"updateOptions\", { labels: fields }, true)\n\n\t\tsoefinding.state.chart5.series = this.findingContent[this.state.currentRegionName].series5\n\t\tApexCharts.exec(\"chart5\", \"updateSeries\", this.findingContent[this.state.currentRegionName].series5)\n\t\tApexCharts.exec(\"chart5\", \"updateOptions\", { labels: fields }, true)\n\n\n\t\tsoefinding.loadFindingHtml()\n\t}\n})"],"mappings":"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","names":[]}
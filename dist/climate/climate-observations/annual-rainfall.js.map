{"version":3,"sources":["../../../src/climate/climate-observations/annual-rainfall.js"],"sourcesContent":["\"use strict\"\n\nsoefinding.regions = pinLocations // these should already be set in ssjs\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n\tsoefinding.yearKeys = soefinding.findingJson.meta.fields.slice(2);\n\tconst regionNames = Object.keys(soefinding.regions)\n\tregionNames.push(\"Queensland\")\n\n\n\tfor (let regionName of regionNames) {\n\n\t\t// create a data series for this region\n\t\tconst item = soefinding.findingJson.data.filter(d => d.Name == regionName)\n\t\tconst seriesNames = [\"Actual\", \"Moving average\"]\n\t\tconst series = seriesNames.map(s => {\n\t\t\tconst regionItem = item.find(d => d.Measure == s)\n\t\t\treturn {\n\t\t\t\tname: s,\n\t\t\t\tdata: soefinding.yearKeys.map(y => regionItem[y])\n\t\t\t}\n\t\t})\n\n\t\t// findingContent holds the html and data series for each region\n\t\tsoefinding.findingContent[regionName] = {\n\t\t\thtml: \"\",\n\t\t\tapp1: series\n\t\t};\n\n\t}\n\n\tconst options1 = soefinding.getDefaultLineChartOptions()\n\toptions1.stroke = {width: 1.5}\n\toptions1.markers.size = 0\n\toptions1.xaxis.categories = soefinding.yearKeys\n\toptions1.xaxis.title.text = \"Year\";\n\toptions1.yaxis.title.text = \"Rainfall (millimetres)\";\n\toptions1.yaxis.labels.formatter = function (val) {\n\t\treturn val;\n\t}\n\n\n\tsoefinding.state.chart1 = {\n\t\toptions: options1,\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].app1,\n\t\tchartactive: true,\n\t};\n\n\n\tnew Vue({\n\t\tel: \"#chartContainer\",\n\t\tdata: soefinding.state,\n\t\tcomputed: {\n\t\t\theading1: function () { return `Annual average rainfall for ${soefinding.state.currentRegionName}` },\n\n\t\t},\n\t\tmethods: {\n\t\t\tformatter1: function (val) { return val?.toLocaleString(undefined, { minimumFractionDigits: 2 }) ?? \"\" }\n\t\t}\n\t})\n\n})\n\n\n\nsoefinding.onRegionChange = function () {\n\n\n\t// set the data series in each of the vue apps, for the current region\n\tthis.state.chart1.series = this.findingContent[this.state.currentRegionName].app1;\n\n\tsoefinding.loadFindingHtml();\n}\n\n"],"mappings":"aAEA,WAAW,QAAU,aAGrB,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,WAAW,SAAW,WAAW,YAAY,KAAK,OAAO,MAAM,GAC/D,GAAM,GAAc,OAAO,KAAK,WAAW,SAC3C,EAAY,KAAK,cAGjB,OAAS,KAAc,GAAa,CAGnC,GAAM,GAAO,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,MAAQ,GAEzD,EAAS,AADK,CAAC,SAAU,kBACJ,IAAI,GAAK,CACnC,GAAM,GAAa,EAAK,KAAK,GAAK,EAAE,SAAW,GAC/C,MAAO,CACN,KAAM,EACN,KAAM,WAAW,SAAS,IAAI,GAAK,EAAW,OAKhD,WAAW,eAAe,GAAc,CACvC,KAAM,GACN,KAAM,GAKR,GAAM,GAAW,WAAW,6BAC5B,EAAS,OAAS,CAAC,MAAO,KAC1B,EAAS,QAAQ,KAAO,EACxB,EAAS,MAAM,WAAa,WAAW,SACvC,EAAS,MAAM,MAAM,KAAO,OAC5B,EAAS,MAAM,MAAM,KAAO,yBAC5B,EAAS,MAAM,OAAO,UAAY,SAAU,EAAK,CAChD,MAAO,IAIR,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,WAAW,eAAe,WAAW,MAAM,mBAAmB,KACtE,YAAa,IAId,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,UAAY,CAAE,MAAO,+BAA+B,WAAW,MAAM,sBAGhF,QAAS,CACR,WAAY,SAAU,EAAK,CA3D9B,MA2DgC,MAAO,oBAAK,eAAe,OAAW,CAAE,sBAAuB,MAAxD,OAAgE,SAQvG,WAAW,eAAiB,UAAY,CAIvC,KAAK,MAAM,OAAO,OAAS,KAAK,eAAe,KAAK,MAAM,mBAAmB,KAE7E,WAAW","names":[]}
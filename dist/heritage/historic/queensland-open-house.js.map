{"version":3,"sources":["../../../src/heritage/historic/queensland-open-house.js"],"sourcesContent":["\"use strict\"\r\n\r\nsoefinding.regions = pinLocations // these should already be set in ssjs\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\tconst years = [...new Set(soefinding.findingJson.data.map(d => d.Year))] // array of each unique year\r\n\tconst locations = [...new Set(soefinding.findingJson.data.map(d => d.Location))] // array of each unique location\r\n\r\n\tconst qldSeries1 = locations.map(loc => {\r\n\t\tconst locationData = soefinding.findingJson.data.filter(d => d.Location == loc)\r\n\t\treturn {\r\n\t\t\tname: loc,\r\n\t\t\tdata: years.map(y => {\r\n\t\t\t\tconst item = locationData.find(ld => ld.Year == y)\r\n\t\t\t\tif (item && item[\"Heritage places open\"] == \"No Data – event not held\")\r\n\t\t\t\t\treturn \"No Data<br>event not held\"\r\n\t\t\t\telse if (item)\r\n\t\t\t\t\treturn item[\"Heritage places open\"]\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"\"\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\tconst options1 = soefinding.getDefaultStackedColumnChartOptions()\r\n\toptions1.xaxis.categories = years\r\n\toptions1.xaxis.title.text = \"Year\"\r\n\toptions1.yaxis.title.text = \"Number of places\"\r\n\r\n\tsoefinding.state.chart1 = {\r\n\t\toptions: options1,\r\n\t\tseries: qldSeries1,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\r\n\tconst qldSeries2 = locations.map(loc => {\r\n\t\tconst locationData = soefinding.findingJson.data.filter(d => d.Location == loc)\r\n\t\treturn {\r\n\t\t\tname: loc,\r\n\t\t\tdata: years.map(y => {\r\n\t\t\t\tconst item = locationData.find(ld => ld.Year == y)\r\n\t\t\t\tif (item && item.Visitors == \"No Data – event not held\")\r\n\t\t\t\t\treturn \"No Data<br>event not held\"\r\n\t\t\t\telse if (item)\r\n\t\t\t\t\treturn item.Visitors\r\n\t\t\t\telse\r\n\t\t\t\t\treturn \"\"\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\tconst options2 = JSON.parse(JSON.stringify(options1))\r\n\toptions2.yaxis.title.text = \"Number of visitors\"\r\n\toptions2.yaxis.labels.formatter = val => `${val / 1000}k`\r\n\toptions2.tooltip.y = { formatter: val => val.toLocaleString() }\r\n\r\n\r\n\tsoefinding.state.chart2 = {\r\n\t\toptions: options2,\r\n\t\tseries: qldSeries2,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\t// now we can interate qld series and pull out info for each city\r\n\tsoefinding.findingContent.Queensland = { html: \"\" } // qld is not in chart3 and 4, but we still need to save its html\r\n\r\n\t// chart 3, places open\r\n\tqldSeries1.forEach(q => {\r\n\t\tsoefinding.findingContent[q.name] = {\r\n\t\t\tapp3: [{\r\n\t\t\t\tname: q.name,\r\n\t\t\t\tdata: q.data,\r\n\t\t\t\thtml: null\r\n\t\t\t}]\r\n\t\t}\r\n\t\t// we have to remove the null items\r\n\t\tsoefinding.findingContent[q.name].categories = []\r\n\t\tconst newData = [] // \r\n\t\tsoefinding.findingContent[q.name].app3[0].data.forEach((d, i) => {\r\n\t\t\tif (d != \"\") {\r\n\t\t\t\tif (d == \"No Data – event not held\") \r\n\t\t\t\t\tnewData.push(0)\r\n\t\t\t\telse\r\n\t\t\t\t\tnewData.push(d)\r\n\t\t\t\tsoefinding.findingContent[q.name].categories.push(years[i])\r\n\t\t\t}\r\n\t\t})\r\n\t\tsoefinding.findingContent[q.name].app3[0].data = newData\r\n\t})\r\n\r\n\tconst options3 = JSON.parse(JSON.stringify(options1))\r\n\toptions3.chart.id = \"chart3\"\r\n\tsoefinding.state.chart3 = {\r\n\t\toptions: options3,\r\n\t\tchartactive: true,\r\n\t\thtml: null\r\n\t};\r\n\tif (soefinding.state.currentRegionName == \"Queensland\")\r\n\t\tsoefinding.state.chart3.series = soefinding.findingContent.Bundaberg.app3 // set a default\r\n\telse\r\n\t\tsoefinding.state.chart3.series = soefinding.findingContent[soefinding.state.currentRegionName].app3\r\n\r\n\r\n\t// chart 4, visitors\r\n\tqldSeries2.forEach(q => {\r\n\t\tsoefinding.findingContent[q.name].app4 = [{\r\n\t\t\tname: q.name,\r\n\t\t\tdata: q.data\r\n\t\t}]\r\n\t\t// we have to remove the null items\r\n\t\tsoefinding.findingContent[q.name].categories = []\r\n\t\tconst newData = [] // \r\n\t\tsoefinding.findingContent[q.name].app4[0].data.forEach((d, i) => {\r\n\t\t\tif (d != \"\") {\r\n\t\t\t\tif (d == \"No Data – event not held\") \r\n\t\t\t\t\tnewData.push(0)\r\n\t\t\t\telse\r\n\t\t\t\t\tnewData.push(d)\r\n\t\t\t\tsoefinding.findingContent[q.name].categories.push(years[i])\r\n\t\t\t}\r\n\t\t})\r\n\t\tsoefinding.findingContent[q.name].app4[0].data = newData\r\n\t})\r\n\r\n\tconst options4 = JSON.parse(JSON.stringify(options2))\r\n\toptions4.chart.id = \"chart4\"\r\n\toptions4.yaxis.labels.formatter = options2.yaxis.labels.formatter\r\n\toptions4.tooltip.y = options2.tooltip.y\r\n\tsoefinding.state.chart4 = {\r\n\t\toptions: options4,\r\n\t\tchartactive: true,\r\n\t\thtml: null\r\n\t};\r\n\tif (soefinding.state.currentRegionName == \"Queensland\")\r\n\t\tsoefinding.state.chart4.series = soefinding.findingContent.Bundaberg.app4 // set a default\r\n\telse\r\n\t\tsoefinding.state.chart4.series = soefinding.findingContent[soefinding.state.currentRegionName].app4\r\n\r\n\r\n\tnew Vue({\r\n\t\tel: \"#chartContainer\",\r\n\t\tdata: soefinding.state,\r\n\t\tcomputed: {\r\n\t\t\theading1: () => `Heritage places open in ${soefinding.state.currentRegionName}`,\r\n\t\t\theading2: () => `People visiting heritage places in ${soefinding.state.currentRegionName}`\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t//formatter1: val => isNaN(parseInt(val)) ? \"\" : val.toLocaleString(),\r\n\t\t\tformatter1: val => val.toLocaleString(),\r\n\t\t\tformatter3: val => val == 0 ? \"No Data — event not held\" : val.toLocaleString(),\r\n\t\t}\r\n\t})\r\n\r\n\twindow.soefinding.onRegionChange = function () {\r\n\t\t// set the data series in each of the vue apps, for the current region\r\n\t\tif (this.state.currentRegionName != \"Queensland\") {\r\n\r\n\t\t\t// update chart 3\r\n\t\t\tthis.state.chart3.series = this.findingContent[this.state.currentRegionName].app3\r\n\r\n\t\t\t// this works on the table\r\n\t\t\tsoefinding.state.chart3.options.xaxis.categories = this.findingContent[this.state.currentRegionName].categories\r\n\t\t\t// but we also need this for the chart to update\r\n\t\t\tApexCharts.exec(\"chart3\", \"updateOptions\", {\r\n\t\t\t\txaxis: { categories: this.findingContent[this.state.currentRegionName].categories }\r\n\t\t\t})\r\n\r\n\r\n\t\t\t// update chart 4\r\n\t\t\tthis.state.chart4.series = this.findingContent[this.state.currentRegionName].app4\r\n\t\t\t// this works on the table\r\n\t\t\tsoefinding.state.chart4.options.xaxis.categories = this.findingContent[this.state.currentRegionName].categories\r\n\t\t\t// but we also need this for the chart to update\r\n\t\t\tApexCharts.exec(\"chart4\", \"updateOptions\", {\r\n\t\t\t\txaxis: { categories: this.findingContent[this.state.currentRegionName].categories }\r\n\t\t\t})\r\n\r\n\t\t}\r\n\r\n\t\tsoefinding.loadFindingHtml();\r\n\t}\r\n\r\n})"],"mappings":"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","names":[]}
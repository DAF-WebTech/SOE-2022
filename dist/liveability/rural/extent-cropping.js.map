{"version":3,"sources":["../../../src/liveability/rural/extent-cropping.js"],"sourcesContent":["\"use strict\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\tconst areas = soefinding.findingJson.meta.fields.slice(2)\r\n\r\n\tconst regions = new Map()\r\n\tconst years = new Set()\r\n\tsoefinding.findingJson.data.forEach(d => {\r\n\t\tif (!regions.has(d.Region))\r\n\t\t\tregions.set(d.Region, [])\r\n\t\t\r\n\t\tregions.get(d.Region).push(d)\r\n\r\n\t\tyears.add(d.Year)\r\n\t})\r\n\r\n\tfor (let [region, data] of regions) {\r\n\t\tsoefinding.findingContent[region] = {\r\n\t\t\tseries: areas.map(a => {\r\n\t\t\t\tlet displayA = a.split(\"(\")\r\n\t\t\t\tdisplayA[1] = \"(\" + displayA[1]\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tname: displayA,\r\n\t\t\t\t\tdata: data.map(d => d[a])\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst options = soefinding.getDefaultStackedColumnChartOptions()\r\n\toptions.xaxis.categories = [...years]\r\n\toptions.xaxis.title.text = \"Year\"\r\n\toptions.yaxis.title.text = \"Hectares (millions)\"\r\n\toptions.yaxis.labels.formatter = val => `${Number.isInteger(val) ? val : val.toFixed(3)}M`\r\n\toptions.legend.showForNullSeries = false\r\n\toptions.tooltip.y = { formatter: val => `${(val * 1000000).toLocaleString()}ha` }\r\n\r\n\tsoefinding.state.chart1 = {\r\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series,\r\n\t\toptions,\r\n\t\tchartactive: true,\r\n\t}\r\n\t \t\r\n\r\n\r\n\r\n\tnew Vue({\r\n\t\tel: \"#chartContainer\",\r\n\t\tdata: soefinding.state,\r\n\t\tcomputed: {\r\n\t\t\theading1: function() { return  `Cropped area (million ha) by season in ${this.currentRegionName}`\r\n\t\t}\r\n\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tformatter1: val => val?.toFixed(2) ?? \"n/a\"\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\r\n\twindow.soefinding.onRegionChange = function () {\r\n\t\tsoefinding.state.chart1.series = soefinding.findingContent[soefinding.state.currentRegionName].series\r\n\r\n\t\tsoefinding.loadFindingHtml()\r\n\t}\r\n\r\n\r\n})"],"mappings":"aAEA,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,KAAM,OAAQ,WAAW,YAAY,KAAK,OAAO,MAAM,GAEvD,KAAM,SAAU,GAAI,KACpB,KAAM,OAAQ,GAAI,KAClB,WAAW,YAAY,KAAK,QAAQ,GAAK,CACxC,GAAI,CAAC,QAAQ,IAAI,EAAE,QAClB,QAAQ,IAAI,EAAE,OAAQ,IAEvB,QAAQ,IAAI,EAAE,QAAQ,KAAK,GAE3B,MAAM,IAAI,EAAE,QAGb,OAAS,CAAC,OAAQ,OAAS,SAAS,CACnC,WAAW,eAAe,QAAU,CACnC,OAAQ,MAAM,IAAI,GAAK,CACtB,GAAI,UAAW,EAAE,MAAM,KACvB,SAAS,GAAK,IAAM,SAAS,GAE7B,MAAO,CACN,KAAM,SACN,KAAM,KAAK,IAAI,GAAK,EAAE,QAM1B,KAAM,SAAU,WAAW,sCAC3B,QAAQ,MAAM,WAAa,CAAC,GAAG,OAC/B,QAAQ,MAAM,MAAM,KAAO,OAC3B,QAAQ,MAAM,MAAM,KAAO,sBAC3B,QAAQ,MAAM,OAAO,UAAY,KAAO,GAAG,OAAO,UAAU,KAAO,IAAM,IAAI,QAAQ,MACrF,QAAQ,OAAO,kBAAoB,MACnC,QAAQ,QAAQ,EAAI,CAAE,UAAW,KAAO,GAAI,KAAM,KAAS,sBAE3D,WAAW,MAAM,OAAS,CACzB,OAAQ,WAAW,eAAe,WAAW,MAAM,mBAAmB,OACtE,QACA,YAAa,MAMd,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,UAAW,CAAE,MAAQ,0CAA0C,KAAK,sBAI/E,QAAS,CACR,WAAY,KAAO,KAAK,QAAQ,IAAM,SAOxC,OAAO,WAAW,eAAiB,UAAY,CAC9C,WAAW,MAAM,OAAO,OAAS,WAAW,eAAe,WAAW,MAAM,mBAAmB,OAE/F,WAAW","names":[]}
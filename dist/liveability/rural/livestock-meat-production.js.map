{"version":3,"sources":["../../../src/liveability/rural/livestock-meat-production.js"],"sourcesContent":["/*\r\nsoefinding.state.regionData = {\r\n\tregionName:  {\r\n\t\tsubregionName: {\r\n\t\t\tchart1: [ \r\n\t\t\t\t{ // column chart for each product\r\n\t\t\t\t\tproductName: \"\",\r\n\t\t\t\t\tseries: [],\r\n\t\t\t\t\toptions: {},\r\n\t\t\t\t\tchartactive: true\r\n\t\t\t\t}\r\n\t\t\t], \r\n\t\t\tchart2: {} // line chart for production values \r\n\t\t},\r\n\t\tsubregionName: {},\r\n\t},\r\n\tregionName: {\r\n\t}\r\n}\r\n*/\r\n\r\n\"use strict\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\tconst region_key = 0\r\n\tconst subregion_key = 1\r\n\tconst quantity_key = 2\r\n\tconst product_key = 3\r\n\tconst header = soefinding.findingJson.data.shift()\r\n\tconst year_keys = [4, 5, 6]\r\n\tconst years = year_keys.map(yk => header[yk])\r\n\r\n\tconst year_keys_value = [8, 9, 10]\r\n\tconst years_value = year_keys_value.map(yk => header[yk])\r\n\r\n\t// group by region and subregion\r\n\tsoefinding.findingContent = { Queensland: {} }\r\n\tsoefinding.state.regionData = {}\r\n\tsoefinding.findingJson.data.forEach(d => {\r\n\r\n\t\t// if it’s all nulls, then ignore it\r\n\t\tif (year_keys.map(yk => d[yk]).every(v => v == null))\r\n\t\t\treturn;\r\n\r\n\t\t\r\n\t\tif (d[subregion_key] == null) {\r\n\t\t\td[subregion_key] = d[region_key]\r\n\t\t}\r\n\r\n\t\tif (!soefinding.state.regionData[d[region_key]]) {\r\n\t\t\tsoefinding.state.regionData[d[region_key]] = {}\r\n\t\t\tsoefinding.findingContent[d[region_key]] = {html: \"\"}\r\n\t\t}\r\n\r\n\t\tif (!soefinding.state.regionData[d[region_key]][d[subregion_key]]) {\r\n\t\t\tsoefinding.state.regionData[d[region_key]][d[subregion_key]] = { \r\n\t\t\t\tdata: [],\r\n\t\t\t\tchart1: [],\r\n\t\t\t\tchart2: {}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// fix the data, replace n.p. with null\r\n\t\td.forEach(function(item, i) { \r\n\t\t\tif (String(item).indexOf(\"&\") >= 0) \r\n\t\t\t\td[i] = item.replace(\"&\", \"and\")\r\n\t\t})\r\n\r\n\t\tif (d[product_key] != \"Total\")\r\n\t\t\tsoefinding.state.regionData[d[region_key]][d[subregion_key]].data.push(d)\r\n\t})\r\n\r\n\tconst columnChartOptions = soefinding.getDefaultColumnChartOptions()\r\n\tcolumnChartOptions.xaxis.categories = years.map(k => k.replace(\"-\", \"–\")) // ndash\r\n\tcolumnChartOptions.xaxis.title.text = \"Year\"\r\n\tcolumnChartOptions.yaxis.title.text = \"Tonnes\"\r\n\tcolumnChartOptions.yaxis.labels.formatter = val => val >= 1000000 ? `${val/1000000}M` : ( val >= 1000 ? `${val/1000}K`: val)\r\n\tcolumnChartOptions.tooltip.y = { formatter: val => val.toLocaleString() }\r\n\r\n\tsoefinding.state.lineChartOptions = soefinding.getDefaultLineChartOptions()\r\n\r\n\r\n\tsoefinding.state.lineChartOptions.xaxis.categories = years_value.map(k => k.replace(\"-\", \"–\")) // ndash\r\n\tsoefinding.state.lineChartOptions.legend.showForNullSeries = false \r\n\tsoefinding.state.lineChartOptions.yaxis.showForNullSeries = false\r\n\tsoefinding.state.lineChartOptions.xaxis.title.text = \"Year\"\r\n\tsoefinding.state.lineChartOptions.xaxis.tickPlacement = \"between\"\r\n\tsoefinding.state.lineChartOptions.tooltip.y = { formatter: val => { \r\n\t\tif (val == null)\r\n\t\t\treturn \"n/a\"\r\n\t\telse\r\n\t\t\treturn `$${val.toLocaleString(undefined, {minimumFractionDigits: 2})}` \r\n\t}}\r\n\tsoefinding.state.lineChartOptions.yaxis.title.text = \"Value ($)\"\r\n\tsoefinding.state.lineChartOptions.yaxis.labels.minWidth = 30\r\n\tsoefinding.state.lineChartOptions.yaxis.labels.formatter = val => {\r\n\t\tif (val >= 1000000000)\r\n\t\t\treturn `${val/1000000000}B`\r\n\t\telse if (val >= 1000000)\r\n\t\t\treturn `${val/1000000}M`\r\n\t\telse if (val >= 1000)\r\n\t\t\treturn `${val/1000}K`\r\n\t\telse \r\n\t\t\treturn val\r\n\t}\r\n\r\n\r\n\t\r\n\tObject.keys(soefinding.state.regionData).forEach(function(regionName) {\r\n\t\tObject.keys(soefinding.state.regionData[regionName]).forEach(function(subregionName) {\r\n\r\n\t\t\tsoefinding.state.regionData[regionName][subregionName].chart1 = soefinding.state.regionData[regionName][subregionName].data.map(d => {\r\n\t\t\t\tlet heading = `Production amount of ${d[product_key]} in ${regionName} `\r\n\t\t\t\tif (regionName != \"Queensland\")\r\n\t\t\t\t\t heading += \"NRM region\"\r\n\t\t\t\tif (regionName != subregionName)\r\n\t\t\t\t\theading += ` — ${subregionName}` // mdash\r\n\r\n\t\t\t\tconst zeroSeries = year_keys.reduce( function (acc, curr) {\r\n\t\t\t\t\t\t\treturn acc + d[curr]\r\n\t\t\t\t\t\t}, 0) == 0\r\n\r\n\t\t\t\tconst options = JSON.parse(JSON.stringify(columnChartOptions))\r\n\t\t\t\toptions.yaxis.title.text = d[quantity_key]\r\n\t\t\t\toptions .tooltip.y = columnChartOptions.tooltip.y\r\n\t\t\t\toptions.yaxis.labels.formatter = columnChartOptions.yaxis.labels.formatter \r\n\r\n\t\t\t\treturn { // column chart for each product\r\n\t\t\t\t\t\tproductName: d[product_key],\r\n\t\t\t\t\t\theading,\r\n\t\t\t\t\t\tseries: [{name: \"Tonnes\", data: year_keys.map(yk => d[yk])}],\r\n\t\t\t\t\t\tchartactive: !zeroSeries,\r\n\t\t\t\t\t\tzeroSeries,\r\n\t\t\t\t\t\toptions\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\t// put together chart 2, one line chart per subregion\r\n\t\t\tlet heading2 = `Production values in ${regionName} `\r\n\t\t\tif (regionName != \"Queensland\")\r\n\t\t\t\theading2 += \"NRM region\"\r\n\t\t\tif (regionName != subregionName)\r\n\t\t\t\theading2 += ` — ${subregionName}`  // mdash\r\n\r\n\t\t\tsoefinding.state.regionData[regionName][subregionName].chart2 = {\r\n\t\t\t\theading2, \r\n\t\t\t\tseries: soefinding.state.regionData[regionName][subregionName].data.map(d => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tname: d[product_key],\r\n\t\t\t\t\t\tdata: year_keys_value.map(ykv => d[ykv])\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tchartactive: true\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n\r\n\r\n\tnew Vue({\r\n\t\tel: \"#chartContainer\",\r\n\t\tdata: soefinding.state,\r\n\t\tmethods: {\r\n\t\t\ttableCellFormatter: val => {\r\n\t\t\t\tif (val == null)\r\n\t\t\t\t\treturn \"n/a\"\r\n\t\t\t\telse if (val == 0)\r\n\t\t\t\t\treturn \"0\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn val.toLocaleString(undefined, {minimumFractionDigits: 2})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t})\r\n\r\n\r\n\twindow.soefinding.onRegionChange = function () {\r\n\t\tsoefinding.loadFindingHtml()\r\n\t}\r\n\r\n})"],"mappings":"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","names":[]}
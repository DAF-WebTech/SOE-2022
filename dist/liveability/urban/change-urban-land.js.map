{"version":3,"sources":["../../../src/liveability/urban/change-urban-land.js"],"sourcesContent":["\"use strict\"\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\tconst regions = soefinding.findingJson.meta.fields.slice(1)\r\n\r\n\tconst Total_area_mapped = 0\r\n\tconst Urban_area_in_1999 = 1\r\n\tconst Urban_area_in_current_mapping = 2\r\n\tconst Year_of_current_mapping = 3\r\n\r\n\r\n\t// fix \"Queensland Wide\" to Queensland, and assuming it was in last position\r\n\tregions[regions.length - 1] = \"Queensland\"\r\n\tsoefinding.findingJson.data.forEach(d => {\r\n\t\tconst temp = d[\"Queensland Wide\"]\r\n\t\tdelete d[\"Queensland Wide\"]\r\n\t\td.Queensland = temp\r\n\t})\r\n\r\n\r\n\t// chart 1, each region and qld\r\n\tregions.forEach(r => {\r\n\t\tr = r.replace(\" NRM region\", \"\")\r\n\t\tsoefinding.findingContent[r] = {\r\n\t\t\tseries1: [{\r\n\t\t\t\tname: \"Hectares\",\r\n\t\t\t\tdata: [soefinding.findingJson.data[Urban_area_in_1999][r], soefinding.findingJson.data[Urban_area_in_current_mapping][r]]\r\n\t\t\t}],\r\n\t\t\tcategories1: [\"1999\", String(soefinding.findingJson.data[Year_of_current_mapping][r]).replace(\"-\", \"â€“\")]\r\n\t\t}\r\n\t})\r\n\r\n\tconst options1 = soefinding.getDefaultColumnChartOptions()\r\n\toptions1.xaxis.categories = soefinding.findingContent[soefinding.state.currentRegionName].categories1\r\n\toptions1.xaxis.title.text = \"Year\"\r\n\toptions1.yaxis.title.text = \"Hectares\"\r\n\toptions1.yaxis.labels.formatter = val => val >= 1000000 ? `${val / 1000000}M` : (val >= 1000 ? `${val / 1000}K` : val)\r\n\toptions1.yaxis.labels.minWidth = 30\r\n\toptions1.tooltip.y = { formatter: val => val.toLocaleString() }\r\n\r\n\tsoefinding.state.chart1 = {\r\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series1,\r\n\t\toptions: options1,\r\n\t\tchartactive: true,\r\n\t}\r\n\r\n\r\n\t// chart 2, pie chart same for every region and qld\r\n\tregions.forEach(r => {\r\n\t\tsoefinding.findingContent[r].series2 = [\r\n\t\t\tsoefinding.findingJson.data[Urban_area_in_current_mapping][r],\r\n\t\t\tsoefinding.findingJson.data[Total_area_mapped][r] - soefinding.findingJson.data[Urban_area_in_current_mapping][r]\r\n\t\t]\r\n\t\tsoefinding.findingContent[r].tfoot2 = `<th scope=row>Total<td class=num>${soefinding.findingJson.data[Total_area_mapped][r].toLocaleString()}`\r\n\t})\r\n\r\n\tconst options2 = soefinding.getDefaultPieChartOptions()\r\n\toptions2.chart.type = \"donut\"\r\n\toptions2.labels = [\"Urban\", \"Non-Urban\"]\r\n\toptions2.xaxis.categories = [\"\", \"Hectares\"]\r\n\toptions2.tooltip = {\r\n\t\ty: {\r\n\t\t\tformatter: (val, options) => {\r\n\t\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\r\n\t\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsoefinding.state.chart2 = {\r\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series2,\r\n\t\ttfoot: soefinding.findingContent[soefinding.state.currentRegionName].tfoot2,\r\n\t\toptions: options2,\r\n\t\tchartactive: true,\r\n\t}\r\n\r\n\r\n\t// chart 3, pie chart regions only\r\n\tregions.filter(r => r != \"Queensland\").forEach(r => {\r\n\t\tsoefinding.findingContent[r].series3 = [\r\n\t\t\tsoefinding.findingJson.data[Total_area_mapped].Queensland,\r\n\t\t\tsoefinding.findingJson.data[Urban_area_in_current_mapping][r]\r\n\t\t]\r\n\t\tsoefinding.findingContent[r].labels3 = [\"Queensland urban\", `${r} urban`]\r\n\t})\r\n\r\n\tconst options3 = soefinding.getDefaultPieChartOptions()\r\n\toptions3.chart.type = \"donut\"\r\n\toptions3.labels = soefinding.findingContent[soefinding.state.currentRegionName].labels3\r\n\toptions3.xaxis.categories = [\"\", \"Hectares\"]\r\n\toptions3.tooltip = { y: { formatter: options1.tooltip.y.formatter } }\r\n\r\n\tsoefinding.state.chart3 = {\r\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series3,\r\n\t\toptions: options3,\r\n\t\tchartactive: true,\r\n\t}\r\n\r\n\r\n\t// chart 4 is a column chart per region that shows on the queensland page\r\n\tconst options4 = soefinding.getDefaultColumnChartOptions()\r\n\toptions4.xaxis.title.text = \"Year\"\r\n\toptions4.yaxis.title.text = \"Hectares\"\r\n\r\n\tsoefinding.state.chart4 = soefinding.regionNames.slice(1).map((r, i) => {\r\n\t\tconst options = JSON.parse(JSON.stringify(options4))\r\n\t\toptions.xaxis.categories = [\"1999\", soefinding.findingJson.data[Year_of_current_mapping][r]]\r\n\t\toptions.yaxis.labels.formatter = val => val > 1000 ? `${val / 1000}k` : val\r\n\t\toptions.tooltip.y = { formatter: val => val.toLocaleString() }\r\n\r\n\t\treturn {\r\n\t\t\tname: r,\r\n\t\t\tchecked: i == 0,\r\n\t\t\tchartactive: true,\r\n\t\t\tseries: [{\r\n\t\t\t\tname: \"Hectares\",\r\n\t\t\t\tdata: [\r\n\t\t\t\t\tsoefinding.findingJson.data[Urban_area_in_1999][r],\r\n\t\t\t\t\tsoefinding.findingJson.data[Urban_area_in_current_mapping][r]\r\n\t\t\t\t]\r\n\t\t\t}],\r\n\t\t\toptions\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\tnew Vue({\r\n\t\tel: \"#chartContainer\",\r\n\t\tdata: soefinding.state,\r\n\t\tcomputed: {\r\n\t\t\theading1: function () {\r\n\t\t\t\tif (this.currentRegionName == \"Queensland\")\r\n\t\t\t\t\treturn \"Urban area growth between 1999 and 2017*\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn `Urban area growth between 1999 and ${soefinding.findingJson.data[Year_of_current_mapping][this.currentRegionName]} in ${this.currentRegionName} NRM region`\r\n\t\t\t},\r\n\t\t\theading2: function () {\r\n\t\t\t\tif (this.currentRegionName == \"Queensland\")\r\n\t\t\t\t\treturn \"Proportion of urban and non-urban areas as at 2017*\"\r\n\t\t\t\telse\r\n\t\t\t\t\treturn `Proportion of ${this.currentRegionName} NRM region made up of urban and non-urban areas in ${soefinding.findingJson.data[Year_of_current_mapping][this.currentRegionName]}`\r\n\t\t\t},\r\n\t\t\theading3: function () {\r\n\t\t\t\treturn `Proportion of Queensland made up of urban area in ${this.currentRegionName} NRM region in 2017`\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tformatter1: val => val.toLocaleString()\r\n\t\t}\r\n\t})\r\n\r\n\twindow.soefinding.onRegionChange = function () {\r\n\t\tsoefinding.state.chart1.options.xaxis.categories = soefinding.findingContent[soefinding.state.currentRegionName].categories1\r\n\t\tsoefinding.state.chart1.series = soefinding.findingContent[soefinding.state.currentRegionName].series1\r\n\r\n\t\tsoefinding.state.chart2.series = soefinding.findingContent[soefinding.state.currentRegionName].series2\r\n\t\tsoefinding.state.chart2.tfoot = soefinding.findingContent[soefinding.state.currentRegionName].tfoot2\r\n\r\n\t\tsoefinding.state.chart3.options.labels = soefinding.findingContent[soefinding.state.currentRegionName].labels3\r\n\t\tsoefinding.state.chart3.series = soefinding.findingContent[soefinding.state.currentRegionName].series3\r\n\r\n\r\n\t\tsoefinding.loadFindingHtml()\r\n\t}\r\n\r\n})\r\n"],"mappings":"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","names":[]}
"use strict";document.addEventListener("DOMContentLoaded",function(){let a=soefinding.findingJson.meta.fields.slice(2),f=a[a.length-1],p={};a.forEach(e=>p[e]=0);let i={};soefinding.findingJson.data.forEach(function(e){if(!i[e["Vehicle Type"]]){let t={};a.forEach(o=>t[o]=0),i[e["Vehicle Type"]]={data:[],vehicleYearTotals:t}}i[e["Vehicle Type"]].data.push(e),a.forEach(t=>{i[e["Vehicle Type"]].vehicleYearTotals[t]+=e[t],p[t]+=e[t]})});let m=Object.keys(i).map(e=>({name:e,value:i[e].vehicleYearTotals[f]}));m.sort(function(e,t){return t.value-e.value});let T=m.map(e=>e.value),u=soefinding.getDefaultPieChartOptions();u.labels=m.map(e=>e.name),u.tooltip={y:{formatter:(e,t)=>{let o=t.globals.seriesPercent[t.seriesIndex][0];return`${e.toLocaleString()} (${o.toFixed(1)}%)`}}},u.xaxis.categories=["Vehicle type","Registrations"],soefinding.state.chart1={options:u,series:T,chartactive:!0};let b=Object.keys(i).map(e=>({name:e,data:a.map(t=>i[e].vehicleYearTotals[t]/p[t]*100)}));b.sort(function(e,t){return t.data[t.data.length-1]-e.data[e.data.length-1]});let s=soefinding.getDefaultLineChartOptions();s.xaxis.categories=a,s.xaxis.title.text="Year",s.yaxis.title.text="Registered Vehicles %",s.yaxis.labels.formatter=e=>`${Math.round(e)}`,s.tooltip.y={formatter:function(e){return`${e.toFixed(2)}%`}},soefinding.state.chart2={options:s,series:b,chartactive:!0};let S=Object.keys(i).map(e=>({name:e,data:a.map(t=>i[e].vehicleYearTotals[t])}));S.sort(function(e,t){return t.data[t.data.length-1]-e.data[e.data.length-1]});let c=soefinding.getDefaultStackedColumnChartOptions();c.xaxis.categories=a,c.xaxis.title.text="Year",c.yaxis.title.text="Registrations",c.yaxis.labels.formatter=e=>`${Math.round(e/1e6)}M`,c.tooltip.y={formatter:function(e){return`${e.toLocaleString()}`}},soefinding.state.chart3={options:c,series:S,chartactive:!0};let x=Object.keys(i).map(e=>{let o=i[e].data.filter(d=>d["Fuel Type"].includes("Electric")).reduce((d,y)=>d+y[f],0);return{name:e,count:o}});x.sort(function(e,t){return t.count-e.count});let $=x.map(e=>e.count),h=JSON.parse(JSON.stringify(u));h.labels=x.map(e=>e.name),h.xaxis.categories[1]="Electrified<br>Vehicle<br>Registrations",h.tooltip={y:{formatter:(e,t)=>{let o=t.globals.seriesPercent[t.seriesIndex][0];return`${e.toLocaleString()} (${o.toFixed(1)}%)`}}},soefinding.state.chart4={options:h,series:$,chartactive:!0};let n={};soefinding.findingJson.data.forEach(function(e){n[e["Fuel Type"]]||(n[e["Fuel Type"]]={rawData:[],data:[]}),n[e["Fuel Type"]].rawData.push(e)}),Object.keys(n).forEach(function(e){a.forEach(function(t){let o=n[e].rawData.reduce(function(d,y){return d+y[t]},0);n[e].data.push(o)})});let g=Object.keys(n).map(e=>({name:e,data:n[e].data}));g.sort(function(e,t){return t.data.at(-1)-e.data.at(-1)});let l=soefinding.getDefaultStackedColumnChartOptions();l.xaxis.categories=a,l.xaxis.title.text="Year",l.yaxis.title.text="Registrations",l.yaxis.labels.formatter=e=>e>=1e6?`${Math.round(e/1e6)}M`:e>=1e3?`${Math.round(e/1e3)}K`:e,l.tooltip.y={formatter:e=>`${e.toLocaleString()}`},soefinding.state.chart5={options:l,series:g,chartactive:!0,extra:"extra checkboxes and shit"},soefinding.state.fuelTypes=g.map(e=>e.name);let r=soefinding.getDefaultLineChartOptions();r.legend.onItemClick={toggleDataSeries:!1},r.chart.id="chart6",r.xaxis.categories=a,r.xaxis.title.text="Year",r.yaxis.title.text="Registrations",r.yaxis.labels.formatter=e=>e>=1e6?`${Math.round(e/1e6)}M`:e>=1e3?`${Math.round(e/1e3)}K`:e,r.tooltip.y={formatter:e=>`${e?.toLocaleString()??""}`},soefinding.state.chart6={options:r,series:g,chartactive:!0},new Vue({el:"#chartContainer",data:soefinding.state,computed:{heading1:()=>`Proportion of vehicle registrations in ${f}`,heading2:()=>"Proportion (%) of registered vehicles by type",heading3:()=>"Number of registered vehicles by vehicle type",heading4:()=>`Proportion of electrified vehicle registrations in ${f}`,heading5:()=>"Number of registered vehicles by fuel type",heading6:()=>""},methods:{formatter1:e=>e.toLocaleString(),formatter2:e=>e.toLocaleString(void 0,{minimumFractionDigits:3,maximumFractionDigits:3}),toggleSeries:e=>{ApexCharts.exec("chart6","toggleSeries",e.currentTarget.value)}},mounted:function(){Array.from(document.querySelectorAll("input[type=checkbox")).forEach((e,t)=>{e.style.accentColor=r.colors[t]})}})});
//# sourceMappingURL=number-registered-vehicles.js.map
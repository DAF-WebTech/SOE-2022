{"version":3,"sources":["../../../src/pollution/air-quality/number-registered-vehicles.js"],"sourcesContent":["\"use strict\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n\tconst yearKeys = soefinding.findingJson.meta.fields.slice(2)\n\tconst latestYear = yearKeys[yearKeys.length - 1]\n\n\tconst yearTotals = {}\n\n\tyearKeys.forEach(y => yearTotals[y] = 0)\n\n\t// group by vehicle type\n\tconst vehicles = {}\n\tsoefinding.findingJson.data.forEach(function (d) {\n\t\tif (!vehicles[d[\"Vehicle Type\"]]) {\n\t\t\tconst vehicleYearTotals = {}\n\t\t\tyearKeys.forEach(y => vehicleYearTotals[y] = 0)\n\t\t\tvehicles[d[\"Vehicle Type\"]] = {\n\t\t\t\tdata: [],\n\t\t\t\tvehicleYearTotals: vehicleYearTotals\n\t\t\t}\n\t\t}\n\n\t\tvehicles[d[\"Vehicle Type\"]].data.push(d)\n\t\tyearKeys.forEach(y => {\n\t\t\tvehicles[d[\"Vehicle Type\"]].vehicleYearTotals[y] += d[y]\n\t\t\tyearTotals[y] += d[y]\n\t\t})\n\n\n\t})\n\n\t// chart 1. proportion of registrations\n\t// first sort them\n\tconst latestProportionData = Object.keys(vehicles).map(v => {\n\t\treturn {\n\t\t\tname: v,\n\t\t\tvalue: vehicles[v].vehicleYearTotals[latestYear]\n\t\t}\n\t})\n\tlatestProportionData.sort(function (a, b) {\n\t\treturn b.value - a.value\n\t})\n\tconst latestProportionSeries = latestProportionData.map(v => v.value)\n\n\t// create the vue instance for first chart, our column chart\n\tconst options1 = soefinding.getDefaultPieChartOptions()\n\t// the pie charts uses labels, but the table vue is looking for categories\n\toptions1.labels = latestProportionData.map(v => v.name)\n\toptions1.tooltip = {\n\t\ty: {\n\t\t\tformatter: (val, options) => {\n\t\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\n\t\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\n\t\t\t}\n\t\t}\n\t}\n\toptions1.xaxis.categories = [\"Vehicle type\", \"Registrations\"] // not needed for chart, but vue uses them for table headings\n\n\tsoefinding.state.chart1 = {\n\t\toptions: options1,\n\t\tseries: latestProportionSeries,\n\t\tchartactive: true,\n\t};\n\n\t// chart 2 yearly proportion of vehicle type\n\tconst yearlyProportionSeries = Object.keys(vehicles).map(v => {\n\t\treturn {\n\t\t\tname: v,\n\t\t\tdata: yearKeys.map(y => {\n\t\t\t\treturn vehicles[v].vehicleYearTotals[y] / yearTotals[y] * 100.0\n\t\t\t})\n\t\t}\n\t})\n\tyearlyProportionSeries.sort(function (a, b) {\n\t\treturn b.data[b.data.length - 1] - a.data[a.data.length - 1]\n\t})\n\tconst options2 = soefinding.getDefaultLineChartOptions()\n\toptions2.xaxis.categories = yearKeys\n\toptions2.xaxis.title.text = \"Year\"\n\toptions2.yaxis.title.text = \"Registered Vehicles %\"\n\toptions2.yaxis.labels.formatter = val => `${Math.round(val)}`\n\toptions2.tooltip.y = {\n\t\tformatter: function (val) {\n\t\t\treturn `${val.toFixed(2)}%`;\n\t\t}\n\t}\n\n\tsoefinding.state.chart2 = {\n\t\toptions: options2,\n\t\tseries: yearlyProportionSeries,\n\t\tchartactive: true,\n\t};\n\n\n\t// chart 3 yearly number of vehicle type\n\tconst yearlyNumberSeries = Object.keys(vehicles).map(v => {\n\t\treturn {\n\t\t\tname: v,\n\t\t\tdata: yearKeys.map(y => {\n\t\t\t\treturn vehicles[v].vehicleYearTotals[y]\n\t\t\t})\n\t\t}\n\t})\n\tyearlyNumberSeries.sort(function (a, b) {\n\t\treturn b.data[b.data.length - 1] - a.data[a.data.length - 1]\n\t})\n\tconst options3 = soefinding.getDefaultStackedColumnChartOptions()\n\toptions3.xaxis.categories = yearKeys\n\toptions3.xaxis.title.text = \"Year\"\n\toptions3.yaxis.title.text = \"Registrations\"\n\toptions3.yaxis.labels.formatter = val => `${Math.round(val / 1000000)}M`\n\toptions3.tooltip.y = {\n\t\tformatter: function (val) {\n\t\t\treturn `${val.toLocaleString()}`;\n\t\t}\n\t}\n\n\tsoefinding.state.chart3 = {\n\t\toptions: options3,\n\t\tseries: yearlyNumberSeries,\n\t\tchartactive: true,\n\t};\n\n\n\t// chart 4 proportion of electric\n\tconst electricProportionItems = Object.keys(vehicles).map(v => {\n\t\tconst electric = vehicles[v].data.filter(d => d[\"Fuel Type\"].includes(\"Electric\"))\n\t\tconst count = electric.reduce((acc, curr) => { return acc + curr[latestYear] }, 0)\n\t\treturn {\n\t\t\tname: v,\n\t\t\tcount\n\t\t}\n\t})\n\telectricProportionItems.sort(function (a, b) {\n\t\treturn b.count - a.count\n\t})\n\tconst electricProportionSeries = electricProportionItems.map(e => e.count)\n\n\t// create the vue instance \n\tconst options4 = JSON.parse(JSON.stringify(options1))\n\t// the pie charts uses labels, but the table vue is looking for categories\n\toptions4.labels = electricProportionItems.map(e => e.name)\n\toptions4.xaxis.categories[1] = \"Electrified<br>Vehicle<br>Registrations\"\n\toptions4.tooltip = {\n\t\ty: {\n\t\t\tformatter: (val, options) => {\n\t\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\n\t\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\n\t\t\t}\n\t\t}\n\t}\n\n\tsoefinding.state.chart4 = {\n\t\toptions: options4,\n\t\tseries: electricProportionSeries,\n\t\tchartactive: true,\n\t};\n\n\n\t// chart 5 all vehicles by fuel type\n\t// group by fuel Type\n\tconst fuelTypes = {}\n\tsoefinding.findingJson.data.forEach(function (d) {\n\t\tif (!fuelTypes[d[\"Fuel Type\"]])\n\t\t\tfuelTypes[d[\"Fuel Type\"]] = { rawData: [], data: [] }\n\t\tfuelTypes[d[\"Fuel Type\"]].rawData.push(d)\n\t})\n\tObject.keys(fuelTypes).forEach(function (ftkey) {\n\t\t// eg 1st iter is diesel\n\t\tyearKeys.forEach(function (year) {\n\t\t\tconst sum = fuelTypes[ftkey].rawData.reduce(function (acc, d) {\n\t\t\t\treturn acc + d[year]\n\t\t\t}, 0)\n\t\t\tfuelTypes[ftkey].data.push(sum)\n\t\t})\n\t})\n\n\tconst fuelTypeSeries = Object.keys(fuelTypes).map(ft => {\n\t\treturn {\n\t\t\tname: ft,\n\t\t\tdata: fuelTypes[ft].data\n\t\t}\n\t})\n\tfuelTypeSeries.sort(function (a, b) {\n\t\treturn b.data.at(-1) - a.data.at(-1)\n\t})\n\n\tconst options5 = soefinding.getDefaultStackedColumnChartOptions()\n\toptions5.xaxis.categories = yearKeys\n\toptions5.xaxis.title.text = \"Year\"\n\toptions5.yaxis.title.text = \"Registrations\"\n\toptions5.yaxis.labels.formatter = val => val >= 1000000 ? `${Math.round(val / 1000000)}M` : (val >= 1000 ? `${Math.round(val / 1000)}K` : val)\n\toptions5.tooltip.y = {\n\t\tformatter: val => `${val.toLocaleString()}`\n\t}\n\n\tsoefinding.state.chart5 = {\n \toptions: options5,\n\t\tseries: fuelTypeSeries,\n\t\tchartactive: true,\n\t\textra: \"extra checkboxes and shit\"\n\t};\n\n\n\t// chart 6 is the chart that responds to check box clicks\n\tsoefinding.state.fuelTypes = fuelTypeSeries.map(ft => ft.name)\n\n\tconst options6 = soefinding.getDefaultLineChartOptions()\n\t//options6.legend.show = false\n\toptions6.legend.onItemClick = { toggleDataSeries: false }\n\toptions6.chart.id = \"chart6\"\n\toptions6.xaxis.categories = yearKeys\n\toptions6.xaxis.title.text = \"Year\"\n\toptions6.yaxis.title.text = \"Registrations\"\n\toptions6.yaxis.labels.formatter = val => val >= 1000000 ? `${Math.round(val / 1000000)}M` : (val >= 1000 ? `${Math.round(val / 1000)}K` : val)\n\toptions6.tooltip.y = {\n\t\tformatter: val => `${val?.toLocaleString() ?? \"\"}`\n\t}\n\n\tsoefinding.state.chart6 = {\n\t\toptions: options6,\n\t\tseries: fuelTypeSeries,\n\t\tchartactive: true,\n\t}\n\n\n\n\n\n\tnew Vue({\n\t\tel: \"#chartContainer\",\n\t\tdata: soefinding.state,\n\t\tcomputed: {\n\t\t\theading1: () => `Proportion of vehicle registrations in ${latestYear}`,\n\t\t\theading2: () => \"Proportion (%) of registered vehicles by type\",\n\t\t\theading3: () => \"Number of registered vehicles by vehicle type\",\n\t\t\theading4: () => `Proportion of electrified vehicle registrations in ${latestYear}`,\n\t\t\theading5: () => \"Number of registered vehicles by fuel type\",\n\t\t\theading6: () => \"\"\n\t\t},\n\t\tmethods: {\n\t\t\tformatter1: val => val.toLocaleString(), //reÃ¼se for 3, 4, 5\n\t\t\tformatter2: val => val.toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 }),\n\t\t\ttoggleSeries: evt => {\n\t\t\t\tApexCharts.exec(\"chart6\", \"toggleSeries\", evt.currentTarget.value)\n\t\t\t}\n\n\t\t},\n\t\tmounted: function () {\n\t\t\t// for whatever f-ed up reason, vue can't bind accent-color\n\t\t\tArray.from(document.querySelectorAll(\"input[type=checkbox\")).forEach((cb, i) => {\n\t\t\t\tcb.style.accentColor = options6.colors[i]\n\t\t\t})\n\t\t}\n\n\t})\n})\n"],"mappings":"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","names":[]}
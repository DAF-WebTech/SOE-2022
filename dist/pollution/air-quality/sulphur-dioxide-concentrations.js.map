{"version":3,"sources":["../../../src/pollution/air-quality/sulphur-dioxide-concentrations.js"],"sourcesContent":["\"use strict\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n\tsoefinding.yearKeys = soefinding.findingJson.meta.fields.slice(2);\n\n\t// chart 1. maximum 1 hour average\n\tconst hourAverage = soefinding.findingJson.data.filter(d => {\n\t\treturn d.Measure == \"Annual maximum 1 hour average sulfur dioxide concentrations\"\n\t})\n\tconst hourAverageSeries = hourAverage.map(d => {\n\t\treturn {\n\t\t\tname: d.Airshed,\n\t\t\tdata: soefinding.yearKeys.map(y => d[y])\n\t\t}\n\t})\n\n\t// create the vue instance for first chart, our column chart\n\tconst options1 = soefinding.getDefaultBarChartOptions()\n\toptions1.xaxis.categories = soefinding.yearKeys\n\toptions1.xaxis.tickPlacement = \"between\"\n\toptions1.xaxis.title.text = \"Year\"\n\toptions1.yaxis.title.text = \"Parts per million\"\n\toptions1.yaxis.tickAmount = 6\n\toptions1.yaxis.min = 0\n\toptions1.yaxis.max = 1.5\n\n\toptions1.tooltip.y = {\n    \tformatter: val => `${val} ppm`\n    }\n    options1.yaxis.labels.formatter = val =>  val.toFixed(2)\n\n    // create vue instance for first chart\n\tsoefinding.state.chart1 = {\n\t\toptions: options1,\n\t\tseries: hourAverageSeries,\n\t\tchartactive: true,\n\t};\n\n\n\t// chart 2, days exceeding\n\tconst annualAverage = soefinding.findingJson.data.filter(d => {\n\t\treturn d.Measure == \"Days when the 1 hour sulfur dioxide concentrations exceed the air NEPM standards\"\n\t})\n\tconst annualAverageSeries = annualAverage.map(d => {\n\t\treturn {\n\t\t\tname: d.Airshed,\n\t\t\tdata: soefinding.yearKeys.map(y => d[y])\n\t\t}\n\t})\n\n\tconst options2 = JSON.parse(JSON.stringify(options1))\n\tdelete options2.yaxis.tickAmount\n\tdelete options2.yaxis.min\n\tdelete options2.yaxis.max\n    \t\n\n\t// create the vue instance for second chart, \n\tsoefinding.state.chart2 = {\n\t\toptions: options2,\n\t\tseries: annualAverageSeries,\n\t\tchartactive: true,\n\t};\n\n\n\n\tnew Vue({\n\t\tel: \"#chartContainer\",\n\t\tdata: soefinding.state,\n\t\tcomputed: {\n\t\t\theading1: function () { return `Annual maximum 1-hour average sulphur dioxide concentrations` },\n\t\t\theading2: function () { return `Number of days when the 1-hour sulphur dioxide concentrations exceed the air NEPM standards` },\n\t\t},\n\t\tmethods: {\n\t\t    formatter1: function(val) { return val?.toLocaleString(undefined, { minimumFractionDigits: 3 }) ?? \"\" },\n\t\t    formatter2: function(val) { return val?.toLocaleString() }\n\t\t}\n\t});\n\n})\n"],"mappings":"aAEA,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,WAAW,SAAW,WAAW,YAAY,KAAK,OAAO,MAAM,GAM/D,GAAM,GAAoB,AAHN,WAAW,YAAY,KAAK,OAAO,GAC/C,EAAE,SAAW,+DAEiB,IAAI,GAClC,EACN,KAAM,EAAE,QACR,KAAM,WAAW,SAAS,IAAI,GAAK,EAAE,OAKjC,EAAW,WAAW,4BAC5B,EAAS,MAAM,WAAa,WAAW,SACvC,EAAS,MAAM,cAAgB,UAC/B,EAAS,MAAM,MAAM,KAAO,OAC5B,EAAS,MAAM,MAAM,KAAO,oBAC5B,EAAS,MAAM,WAAa,EAC5B,EAAS,MAAM,IAAM,EACrB,EAAS,MAAM,IAAM,IAErB,EAAS,QAAQ,EAAI,CACjB,UAAW,GAAO,GAAG,SAEtB,EAAS,MAAM,OAAO,UAAY,GAAQ,EAAI,QAAQ,GAGzD,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,EACR,YAAa,IAQd,GAAM,GAAsB,AAHN,WAAW,YAAY,KAAK,OAAO,GACjD,EAAE,SAAW,oFAEqB,IAAI,GACtC,EACN,KAAM,EAAE,QACR,KAAM,WAAW,SAAS,IAAI,GAAK,EAAE,OAIjC,EAAW,KAAK,MAAM,KAAK,UAAU,IAC3C,MAAO,GAAS,MAAM,WACtB,MAAO,GAAS,MAAM,IACtB,MAAO,GAAS,MAAM,IAItB,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,EACR,YAAa,IAKd,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,UAAY,CAAE,MAAO,gEAC/B,SAAU,UAAY,CAAE,MAAO,gGAEhC,QAAS,CACL,WAAY,SAAS,EAAK,CAAE,MAAO,IAAK,eAAe,OAAW,CAAE,sBAAuB,KAAQ,IACnG,WAAY,SAAS,EAAK,CAAE,MAAO,IAAK","names":[]}
{"version":3,"sources":["../../../src/pollution/greenhouse-gas-omissions/industrial-processes-sector.js"],"sourcesContent":["\"use strict\"\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\tconst yearKeys = soefinding.findingJson.meta.fields.slice(2)\r\n\tconst latestYear = yearKeys[yearKeys.length - 1]\r\n\r\n\t// 1. pie, proportion by state, latest year\r\n\tconst allStates = soefinding.findingJson.data.filter(d => d.Category == \"All\")\r\n\tallStates.sort(function (a, b) {\r\n\t\treturn b[latestYear] - a[latestYear]\r\n\t})\r\n\tconst allStatesSeries = allStates.map(d => d[latestYear])\r\n\r\n\tconst options1 = soefinding.getDefaultPieChartOptions()\r\n\t// the pie charts uses labels, but the table vue is looking for categories\r\n\toptions1.labels = allStates.map(d => d.State)\r\n\toptions1.tooltip = {\r\n\t\ty: {\r\n\t\t\tformatter: (val, options) => {\r\n\t\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\r\n\t\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\toptions1.xaxis.categories = [\"Sector\", \"Emissions<br>(million tonnes)\"] // not needed for chart, but vue uses them for table headings\r\n\r\n\tsoefinding.state.chart1 = {\r\n\t\toptions: options1,\r\n\t\tseries: allStatesSeries,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\r\n\t// 2. pie qld proportion of sectors, latest year\r\n\tconst qldItems = soefinding.findingJson.data.filter(d => d.State == \"Queensland\" && d.Category != \"All\")\r\n\tqldItems.sort(function (a, b) {\r\n\t\treturn b[latestYear] - a[latestYear]\r\n\t})\r\n\tconst qldSeries = qldItems.filter(d => d[latestYear] != \"Data is confidential\")\r\n\t  .map(d => d[latestYear])\r\n\r\n\tconst options2 = JSON.parse(JSON.stringify(options1))\r\n\toptions2.labels = qldItems.filter(d => d[latestYear] != \"Data is confidential\").map(d => d.Category)\r\n\r\n\tsoefinding.state.chart2 = {\r\n\t\toptions: options2, // reüse\r\n\t\tseries: qldSeries,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\r\n\t// 3. stacked area chart, trend in each sector\r\n\tconst qldTrendSeries = qldItems.map(d => {\r\n\t\treturn {\r\n\t\t\tname: d.Category,\r\n\t\t\tdata: yearKeys.map(y => d[y] == \"Data is confidential\" ? null : d[y])\r\n\t\t}\r\n\t})\r\n\tqldTrendSeries.sort(function(a, b) {\r\n\t\tif (a.data.at(-1) == null || b.data.at(-1) == null)\r\n\t\t\treturn b.data[6] - a.data[6]\r\n\t\telse\r\n\t\t\treturn b.data.at(-1) - a.data.at(-1)\r\n\t})//doesn't seem to work\r\n\r\n\tconst options3 = soefinding.getDefaultAreaChartOptions()\r\n\toptions3.stroke = {width: 1 }\r\n\toptions3.xaxis.categories = yearKeys\r\n\toptions3.xaxis.title.text = \"Year\"\r\n\toptions3.yaxis.title.text = \"Tonnes\"\r\n\toptions3.yaxis.labels.formatter = val => `${val.toLocaleString(undefined, {maximumFractionDigits: 2})}M`\r\n\toptions3.tooltip.y = {\r\n\t\tformatter: val => `${(val * 1000000).toLocaleString()}`\r\n\t}\r\n\r\n\tsoefinding.state.chart3 = {\r\n\t\toptions: options3,\r\n\t\tseries: qldTrendSeries,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\r\n\t// 4. queensland totals table\r\n\tconst qldTotalItem = soefinding.findingJson.data.find(d => d.State == \"Queensland\" && d.Category == \"All\")\r\n\tconst qldTotalSeries = yearKeys.map(y => qldTotalItem[y])\r\n\r\n\tconst options4 = {\r\n\t\txaxis: { categories: [\"Year\", \"Emissions<br>(million tonnes)\"] },\r\n\t\tlabels: yearKeys\r\n\t}\r\n\r\n\tsoefinding.state.chart4 = {\r\n\t\toptions: options4,\r\n\t\tseries: qldTotalSeries\r\n\t};\r\n\r\n\r\n\tnew Vue({\r\n\t\tel: \"#chartContainer\",\r\n\t\tdata: soefinding.state,\r\n\t\tcomputed: {\r\n\t\t\theading1: () => `Proportion of industrial processes emissions by state, ${latestYear}`,\r\n\t\t\theading2: () => `Proportion of Queensland’s industrial processes emissions by category, ${latestYear}`,\r\n\t\t\theading3: () => \"Trends in Queensland’s industrial processes emissions, by category\",\r\n\t\t\theading4: () => \"Queensland’s total industrial processes emissions\"\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tformatter1: val => val?.toLocaleString(undefined, { minimumFractionDigits: 3, maximumFractionDigits: 3 }) ?? \"confidential\" //reüse for 2, 3\r\n\t\t}\r\n\t})\r\n})\r\n"],"mappings":"aAEA,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,KAAM,UAAW,WAAW,YAAY,KAAK,OAAO,MAAM,GAC1D,KAAM,YAAa,SAAS,SAAS,OAAS,GAG9C,KAAM,WAAY,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,UAAY,OACxE,UAAU,KAAK,SAAU,EAAG,EAAG,CAC9B,MAAO,GAAE,YAAc,EAAE,cAE1B,KAAM,iBAAkB,UAAU,IAAI,GAAK,EAAE,aAE7C,KAAM,UAAW,WAAW,4BAE5B,SAAS,OAAS,UAAU,IAAI,GAAK,EAAE,OACvC,SAAS,QAAU,CAClB,EAAG,CACF,UAAW,CAAC,IAAK,UAAY,CAC5B,KAAM,SAAU,QAAQ,QAAQ,cAAc,QAAQ,aAAa,GACnE,MAAO,GAAG,IAAI,qBAAqB,QAAQ,QAAQ,UAItD,SAAS,MAAM,WAAa,CAAC,SAAU,iCAEvC,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,gBACR,YAAa,MAKd,KAAM,UAAW,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,OAAS,cAAgB,EAAE,UAAY,OAClG,SAAS,KAAK,SAAU,EAAG,EAAG,CAC7B,MAAO,GAAE,YAAc,EAAE,cAE1B,KAAM,WAAY,SAAS,OAAO,GAAK,EAAE,aAAe,wBACrD,IAAI,GAAK,EAAE,aAEd,KAAM,UAAW,KAAK,MAAM,KAAK,UAAU,WAC3C,SAAS,OAAS,SAAS,OAAO,GAAK,EAAE,aAAe,wBAAwB,IAAI,GAAK,EAAE,UAE3F,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,UACR,YAAa,MAKd,KAAM,gBAAiB,SAAS,IAAI,GAAK,CACxC,MAAO,CACN,KAAM,EAAE,SACR,KAAM,SAAS,IAAI,GAAK,EAAE,IAAM,uBAAyB,KAAO,EAAE,OAGpE,eAAe,KAAK,SAAS,EAAG,EAAG,CAClC,GAAI,EAAE,KAAK,GAAG,KAAO,MAAQ,EAAE,KAAK,GAAG,KAAO,KAC7C,MAAO,GAAE,KAAK,GAAK,EAAE,KAAK,OAE1B,OAAO,GAAE,KAAK,GAAG,IAAM,EAAE,KAAK,GAAG,MAGnC,KAAM,UAAW,WAAW,6BAC5B,SAAS,OAAS,CAAC,MAAO,GAC1B,SAAS,MAAM,WAAa,SAC5B,SAAS,MAAM,MAAM,KAAO,OAC5B,SAAS,MAAM,MAAM,KAAO,SAC5B,SAAS,MAAM,OAAO,UAAY,KAAO,GAAG,IAAI,eAAe,OAAW,CAAC,sBAAuB,OAClG,SAAS,QAAQ,EAAI,CACpB,UAAW,KAAO,GAAI,KAAM,KAAS,oBAGtC,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,eACR,YAAa,MAKd,KAAM,cAAe,WAAW,YAAY,KAAK,KAAK,GAAK,EAAE,OAAS,cAAgB,EAAE,UAAY,OACpG,KAAM,gBAAiB,SAAS,IAAI,GAAK,aAAa,IAEtD,KAAM,UAAW,CAChB,MAAO,CAAE,WAAY,CAAC,OAAQ,kCAC9B,OAAQ,UAGT,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,gBAIT,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,IAAM,0DAA0D,aAC1E,SAAU,IAAM,+EAA0E,aAC1F,SAAU,IAAM,0EAChB,SAAU,IAAM,0DAEjB,QAAS,CACR,WAAY,KAAO,KAAK,eAAe,OAAW,CAAE,sBAAuB,EAAG,sBAAuB,KAAQ","names":[]}
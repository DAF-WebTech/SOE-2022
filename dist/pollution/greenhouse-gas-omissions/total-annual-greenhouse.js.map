{"version":3,"sources":["../../../src/pollution/greenhouse-gas-omissions/total-annual-greenhouse.js"],"sourcesContent":["\"use strict\"\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\tconst yearKeys = soefinding.findingJson.meta.fields.slice(2)\r\n\tconst latestYear = yearKeys[yearKeys.length - 1]\r\n\r\n\t// chart 1. pie, Queensland proportion\r\n\tconst qldSectors = soefinding.findingJson.data.filter(d => d.State == \"Queensland\" && d.Sector != \"All (incl. LULUCF)\")\r\n\tqldSectors.sort(function (a, b) {\r\n\t\treturn b[latestYear] - a[latestYear]\r\n\t})\r\n\tconst proportionSeries = qldSectors.map(d => d[latestYear])\r\n\r\n\tconst options1 = soefinding.getDefaultPieChartOptions()\r\n\t// the pie charts uses labels, but the table vue is looking for categories\r\n\toptions1.labels = qldSectors.map(d => d.Sector)\r\n\toptions1.tooltip = {\r\n\t\ty: {\r\n\t\t\tformatter: (val, options) => {\r\n\t\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\r\n\t\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\toptions1.xaxis.categories = [\"Sector\", \"Emissions<br>(million tonnes)\"] // not needed for chart, but vue uses them for table headings\r\n\r\n\tsoefinding.state.chart1 = {\r\n\t\toptions: options1,\r\n\t\tseries: proportionSeries,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\t// 2. stacked columns, all states all sectors latest year\r\n\t// \tconst states = {}\r\n\t// \tsoefinding.findingJson.data.forEach(d => {\r\n\t// \t\tif (d.Sector != \"All\" && d.Sector != \"All (incl. LULUCF)\") {\r\n\t// \t\t\tif (!states[d.State])\r\n\t// \t\t\t\tstates[d.State] = []\r\n\t// \t\t\tstates[d.State].push(d)\r\n\t// \t\t}\r\n\t// \t})\r\n\tconst sectors = {}\r\n\tsoefinding.findingJson.data.forEach(d => {\r\n\t\tif (d.Sector != \"All\" && d.Sector != \"All (incl. LULUCF)\") {\r\n\t\t\tif (!sectors[d.Sector])\r\n\t\t\t\tsectors[d.Sector] = []\r\n\t\t\tsectors[d.Sector].push(d)\r\n\t\t}\r\n\t})\r\n\tconst sectorSeries = Object.keys(sectors).map(k => {\r\n\t\treturn {\r\n\t\t\tname: k,\r\n\t\t\tdata: sectors[k].map(d => d[latestYear])\r\n\t\t}\r\n\t})\r\n\r\n\tconst options2 = soefinding.getDefaultBarChartOptions()\r\n\toptions2.chart.stacked = true\r\n\toptions2.xaxis.categories = [\"Qld\", \"NSW\", \"Vic\", \"WA\", \"SA\", \"NT\", \"Tas\", \"ACT\"]\r\n\toptions2.xaxis.title.text = \"State\"\r\n\toptions2.yaxis.title.text = \"Tonnes\"\r\n\toptions2.yaxis.labels.formatter = val => `${Math.round(val)}M`\r\n\toptions2.tooltip.y = {\r\n\t\tformatter: val => `${(val * 1000000).toLocaleString()}`\r\n\t}\r\n\r\n\tsoefinding.state.chart2 = {\r\n\t\toptions: options2,\r\n\t\tseries: sectorSeries,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\r\n\t//3. multi line, trend in qld sectors\r\n\tconst qldTotal = soefinding.findingJson.data.find(d => d.State == \"Queensland\" && d.Sector == \"All (incl. LULUCF)\")\r\n\tqldSectors.unshift(qldTotal)\r\n\tconst qldTrendSeries = qldSectors.map(d => {\r\n\t\treturn {\r\n\t\t\tname: d.Sector,\r\n\t\t\tdata: yearKeys.map(y => d[y])\r\n\t\t}\r\n\t})\r\n\r\n\tconst options3 = soefinding.getDefaultLineChartOptions()\r\n\toptions3.markers.size = 4\r\n\toptions3.xaxis.categories = yearKeys\r\n\toptions3.xaxis.title.text = \"Year\"\r\n\toptions3.yaxis.title.text = \"Tonnes\"\r\n\toptions3.yaxis.labels.formatter = val => `${val.toLocaleString(undefined, {maximumFractionDigits: 2})}M`\r\n\toptions3.tooltip.y = {\r\n\t\tformatter: val => `${(val * 1000000).toLocaleString()}`\r\n\t}\r\n\r\n\tsoefinding.state.chart3 = {\r\n\t\toptions: options3,\r\n\t\tseries: qldTrendSeries,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\r\n\t//4. table only, qld totals\r\n\tconst qldTotalSeries = yearKeys.map(y => qldTotal[y])\r\n\r\n\tconst options4 = {\r\n\t\txaxis: { categories: [\"Year\", \"Emissions<br>(million tonnes)\"]  },\r\n\t\tlabels: yearKeys\r\n\t}\r\n\r\n\tsoefinding.state.chart4 = {\r\n\t\toptions: options4,\r\n\t\tseries: qldTotalSeries\r\n\t};\r\n\r\n\r\n\r\n\tnew Vue({\r\n\t\tel: \"#chartContainer\",\r\n\t\tdata: soefinding.state,\r\n\t\tcomputed: {\r\n\t\t\theading1: () => `Proportion of Queensland’s emissions by sector, ${latestYear}`,\r\n\t\t\theading2: () => `Comparison of state and territory emissions by sector, ${latestYear}`,\r\n\t\t\theading3: () => `Trends in Queensland emissions, by sector`,\r\n\t\t\theading4: () => \"Total Queensland emissions\"\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tformatter1: val => val.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 }) //reüse for 2, 3\r\n\t\t}\r\n\t})\r\n})\r\n"],"mappings":"aAEA,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,KAAM,UAAW,WAAW,YAAY,KAAK,OAAO,MAAM,GAC1D,KAAM,YAAa,SAAS,SAAS,OAAS,GAG9C,KAAM,YAAa,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,OAAS,cAAgB,EAAE,QAAU,sBAClG,WAAW,KAAK,SAAU,EAAG,EAAG,CAC/B,MAAO,GAAE,YAAc,EAAE,cAE1B,KAAM,kBAAmB,WAAW,IAAI,GAAK,EAAE,aAE/C,KAAM,UAAW,WAAW,4BAE5B,SAAS,OAAS,WAAW,IAAI,GAAK,EAAE,QACxC,SAAS,QAAU,CAClB,EAAG,CACF,UAAW,CAAC,IAAK,UAAY,CAC5B,KAAM,SAAU,QAAQ,QAAQ,cAAc,QAAQ,aAAa,GACnE,MAAO,GAAG,IAAI,qBAAqB,QAAQ,QAAQ,UAItD,SAAS,MAAM,WAAa,CAAC,SAAU,iCAEvC,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,iBACR,YAAa,MAYd,KAAM,SAAU,GAChB,WAAW,YAAY,KAAK,QAAQ,GAAK,CACxC,GAAI,EAAE,QAAU,OAAS,EAAE,QAAU,qBAAsB,CAC1D,GAAI,CAAC,QAAQ,EAAE,QACd,QAAQ,EAAE,QAAU,GACrB,QAAQ,EAAE,QAAQ,KAAK,MAGzB,KAAM,cAAe,OAAO,KAAK,SAAS,IAAI,GAAK,CAClD,MAAO,CACN,KAAM,EACN,KAAM,QAAQ,GAAG,IAAI,GAAK,EAAE,gBAI9B,KAAM,UAAW,WAAW,4BAC5B,SAAS,MAAM,QAAU,KACzB,SAAS,MAAM,WAAa,CAAC,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,MAAO,OAC3E,SAAS,MAAM,MAAM,KAAO,QAC5B,SAAS,MAAM,MAAM,KAAO,SAC5B,SAAS,MAAM,OAAO,UAAY,KAAO,GAAG,KAAK,MAAM,QACvD,SAAS,QAAQ,EAAI,CACpB,UAAW,KAAO,GAAI,KAAM,KAAS,oBAGtC,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,aACR,YAAa,MAKd,KAAM,UAAW,WAAW,YAAY,KAAK,KAAK,GAAK,EAAE,OAAS,cAAgB,EAAE,QAAU,sBAC9F,WAAW,QAAQ,UACnB,KAAM,gBAAiB,WAAW,IAAI,GAAK,CAC1C,MAAO,CACN,KAAM,EAAE,OACR,KAAM,SAAS,IAAI,GAAK,EAAE,OAI5B,KAAM,UAAW,WAAW,6BAC5B,SAAS,QAAQ,KAAO,EACxB,SAAS,MAAM,WAAa,SAC5B,SAAS,MAAM,MAAM,KAAO,OAC5B,SAAS,MAAM,MAAM,KAAO,SAC5B,SAAS,MAAM,OAAO,UAAY,KAAO,GAAG,IAAI,eAAe,OAAW,CAAC,sBAAuB,OAClG,SAAS,QAAQ,EAAI,CACpB,UAAW,KAAO,GAAI,KAAM,KAAS,oBAGtC,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,eACR,YAAa,MAKd,KAAM,gBAAiB,SAAS,IAAI,GAAK,SAAS,IAElD,KAAM,UAAW,CAChB,MAAO,CAAE,WAAY,CAAC,OAAQ,kCAC9B,OAAQ,UAGT,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,gBAKT,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,IAAM,wDAAmD,aACnE,SAAU,IAAM,0DAA0D,aAC1E,SAAU,IAAM,4CAChB,SAAU,IAAM,8BAEjB,QAAS,CACR,WAAY,KAAO,IAAI,eAAe,OAAW,CAAE,sBAAuB,EAAG,sBAAuB","names":[]}
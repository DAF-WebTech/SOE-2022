{"version":3,"sources":["../../../src/pollution/waste/commercial-industrial-landfilled.js"],"sourcesContent":["\"use strict\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n\tconst yearKeys = soefinding.findingJson.meta.fields.slice(1)\n\tconst latestYear = yearKeys[yearKeys.length - 1]\n\tconst lastFourYears = yearKeys.slice(yearKeys.length - 4)\n\n\t//1. column chart for qld for the last four years\n\tconst qldItem = soefinding.findingJson.data.find(d => d[\"Waste region\"] == \"Queensland\")\n\tconst fourYearSeries = [{\n\t\tname: \"Queensland\",\n\t\tdata: lastFourYears.map(y => qldItem[y])\n\t}]\n\n\tconst options1 = soefinding.getDefaultBarChartOptions()\n\toptions1.xaxis.categories = lastFourYears.map(y => y.replace(\"-\", \"–\")) // ndash\n\toptions1.xaxis.title.text = \"Year\"\n\toptions1.yaxis.title.text = \"Tonnes (million)\"\n\toptions1.yaxis.labels.formatter = val => {\n\t\treturn `${(val / 1000000).toFixed(1)}M`\n\t}\n\toptions1.tooltip.y = {\n\t\tformatter: val => val.toLocaleString()\n\t}\n\toptions1.yaxis.forceNiceScale = false\n\toptions1.yaxis.min = 1000000\n\toptions1.yaxis.max = 2000000\n\toptions1.yaxis.tickAmount = 5\n\n\tsoefinding.state.chart1 = {\n\t\toptions: options1,\n\t\tseries: fourYearSeries,\n\t\tchartactive: true,\n\t}\n\n\n\t// 2. line chart for excluding green waste for all years\n\tconst excludingGreenItem = soefinding.findingJson.data.find(d => d[\"Waste region\"] == \"Excluding green waste\")\n\tconst excludingGreenSeries = [{\n\t\tname: \"Excluding green waste\",\n\t\tdata: yearKeys.map(y => excludingGreenItem[y])\n\t}]\n\n\tconst options2 = soefinding.getDefaultLineChartOptions()\n\toptions2.xaxis.categories = yearKeys.map(y => y.replace(\"-\", \"–\")) // ndash\n\toptions2.xaxis.title.text = \"Year\"\n\toptions2.xaxis.labels.rotateAlways = true\n\toptions2.yaxis.title.text = \"Tonnes (million)\"\n\toptions2.yaxis.labels.formatter = val => {\n\t\treturn `${(val / 1000000).toFixed(1)}M`\n\t}\n\toptions2.tooltip.y = {\n\t\tformatter: val => val.toLocaleString()\n\t}\n\n\tsoefinding.state.chart2 = {\n\t\toptions: options2,\n\t\tseries: excludingGreenSeries,\n\t\tchartactive: true,\n\t}\n\n\n\t//3. pie chart for all regions, latest Year\n\tconst regionItems = soefinding.findingJson.data.filter(d => d[\"Waste region\"] != \"Queensland\" && d[\"Waste region\"] != \"Excluding green waste\")\n\tregionItems.sort(function (a, b) {\n\t\treturn b[latestYear] - a[latestYear]\n\t})\n\tconst regionSeries = regionItems.map(d => d[latestYear])\n\n\tconst options3 = soefinding.getDefaultPieChartOptions()\n\toptions3.labels = regionItems.map(d => d[\"Waste region\"].replace(\"-\", \"–\"))\n\toptions3.tooltip.y = {\n\t\tformatter: (val, options) => {\n\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\n\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\n\t\t}\n\t}\n\toptions3.xaxis.categories = [\"Waste Region\", \"Tonnes\"]\n\n\tsoefinding.state.chart3 = {\n\t\toptions: options3,\n\t\tseries: regionSeries,\n\t\tchartactive: true,\n\t}\n\n\n\tnew Vue({\n\t\tel: \"#chartContainer\",\n\t\tdata: soefinding.state,\n\t\tcomputed: {\n\t\t\theading1: () => \"Commercial and industrial waste landfilled\",\n\t\t\theading2: () => \"Trend in total commercial and industrial waste landfilled (excluding green waste)\",\n\t\t\theading3: () => `Proportion of commercial and industrial waste landfilled by region, ${latestYear.replace(\"-\", \"–\")}`, //ndash\n\t\t},\n\t\tmethods: {\n\t\t\tformatter1: val => val?.toLocaleString() ?? \"\",\n\t\t}\n\t})\n})\n"],"mappings":"aAEA,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,KAAM,UAAW,WAAW,YAAY,KAAK,OAAO,MAAM,GAC1D,KAAM,YAAa,SAAS,SAAS,OAAS,GAC9C,KAAM,eAAgB,SAAS,MAAM,SAAS,OAAS,GAGvD,KAAM,SAAU,WAAW,YAAY,KAAK,KAAK,GAAK,EAAE,iBAAmB,cAC3E,KAAM,gBAAiB,CAAC,CACvB,KAAM,aACN,KAAM,cAAc,IAAI,GAAK,QAAQ,MAGtC,KAAM,UAAW,WAAW,4BAC5B,SAAS,MAAM,WAAa,cAAc,IAAI,GAAK,EAAE,QAAQ,IAAK,WAClE,SAAS,MAAM,MAAM,KAAO,OAC5B,SAAS,MAAM,MAAM,KAAO,mBAC5B,SAAS,MAAM,OAAO,UAAY,KAAO,CACxC,MAAO,GAAI,KAAM,KAAS,QAAQ,OAEnC,SAAS,QAAQ,EAAI,CACpB,UAAW,KAAO,IAAI,kBAEvB,SAAS,MAAM,eAAiB,MAChC,SAAS,MAAM,IAAM,IACrB,SAAS,MAAM,IAAM,IACrB,SAAS,MAAM,WAAa,EAE5B,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,eACR,YAAa,MAKd,KAAM,oBAAqB,WAAW,YAAY,KAAK,KAAK,GAAK,EAAE,iBAAmB,yBACtF,KAAM,sBAAuB,CAAC,CAC7B,KAAM,wBACN,KAAM,SAAS,IAAI,GAAK,mBAAmB,MAG5C,KAAM,UAAW,WAAW,6BAC5B,SAAS,MAAM,WAAa,SAAS,IAAI,GAAK,EAAE,QAAQ,IAAK,WAC7D,SAAS,MAAM,MAAM,KAAO,OAC5B,SAAS,MAAM,OAAO,aAAe,KACrC,SAAS,MAAM,MAAM,KAAO,mBAC5B,SAAS,MAAM,OAAO,UAAY,KAAO,CACxC,MAAO,GAAI,KAAM,KAAS,QAAQ,OAEnC,SAAS,QAAQ,EAAI,CACpB,UAAW,KAAO,IAAI,kBAGvB,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,qBACR,YAAa,MAKd,KAAM,aAAc,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,iBAAmB,cAAgB,EAAE,iBAAmB,yBACtH,YAAY,KAAK,SAAU,EAAG,EAAG,CAChC,MAAO,GAAE,YAAc,EAAE,cAE1B,KAAM,cAAe,YAAY,IAAI,GAAK,EAAE,aAE5C,KAAM,UAAW,WAAW,4BAC5B,SAAS,OAAS,YAAY,IAAI,GAAK,EAAE,gBAAgB,QAAQ,IAAK,WACtE,SAAS,QAAQ,EAAI,CACpB,UAAW,CAAC,IAAK,UAAY,CAC5B,KAAM,SAAU,QAAQ,QAAQ,cAAc,QAAQ,aAAa,GACnE,MAAO,GAAG,IAAI,qBAAqB,QAAQ,QAAQ,SAGrD,SAAS,MAAM,WAAa,CAAC,eAAgB,UAE7C,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,aACR,YAAa,MAId,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,IAAM,6CAChB,SAAU,IAAM,oFAChB,SAAU,IAAM,uEAAuE,WAAW,QAAQ,IAAK,aAEhH,QAAS,CACR,WAAY,KAAO,KAAK,kBAAoB","names":[]}
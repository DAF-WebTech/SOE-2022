{"version":3,"sources":["../../../src/pollution/waste/household-waste-landfilled.js"],"sourcesContent":["\"use strict\"\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\tconst yearKeys = soefinding.findingJson.meta.fields.slice(2)\r\n\tconst latestYear = yearKeys[yearKeys.length - 1]\r\n\r\n\t//1. stacked column, all waste types each year\r\n\tconst qldItems = soefinding.findingJson.data.filter(d => d[\"Waste region\"] == \"Queensland\" && d[\"Waste source\"] != \"All\")\r\n\tconst wasteYearSeries = qldItems.map(d => {\r\n\t\treturn {\r\n\t\t\tname: d[\"Waste source\"],\r\n\t\t\tdata: yearKeys.map(y => d[y])\r\n\t\t}\r\n\t})\r\n\twasteYearSeries.sort(function (a, b) {\r\n\t\treturn b.data[b.data.length - 1] - a.data[a.data.length - 1]\r\n\t})\r\n\r\n\r\n\tconst options1 = soefinding.getDefaultBarChartOptions()\r\n\toptions1.chart.stacked = true\r\n\toptions1.legend.inverseOrder = true\r\n\toptions1.xaxis.categories = yearKeys.map(y => y.replace(\"-\", \"–\")) // ndash\r\n\toptions1.xaxis.title.text = \"Year\"\r\n\toptions1.yaxis.title.text = \"Tonnes (million)\"\r\n\toptions1.yaxis.labels.formatter = val => {\r\n\t\treturn `${(val / 1000000).toFixed(1)}M`\r\n\t}\r\n\toptions1.tooltip.y = {\r\n\t\tformatter: val => val.toLocaleString()\r\n\t}\r\n\r\n\tsoefinding.state.chart1 = {\r\n\t\toptions: options1,\r\n\t\tseries: wasteYearSeries,\r\n\t\tchartactive: true,\r\n\t}\r\n\r\n\r\n\t// 2. line, total\r\n\tconst qldAll = soefinding.findingJson.data.find(d => d[\"Waste region\"] == \"Queensland\" && d[\"Waste source\"] == \"All\")\r\n\tconst qldAllSeries = [{\r\n\t\tname: \"Total\",\r\n\t\tdata: yearKeys.map(y => qldAll[y])\r\n\t}]\r\n\r\n\tconst options2 = soefinding.getDefaultLineChartOptions()\r\n\toptions2.xaxis.categories = yearKeys.map(y => y.replace(\"-\", \"–\"))// .match(/[^–]+–?/g)) // ndash\r\n\toptions2.xaxis.title.text = \"Year\"\r\n\toptions2.yaxis.title.text = \"Tonnes (million)\"\r\n\toptions2.yaxis.labels.formatter = val => {\r\n\t\treturn `${(val / 1000000).toFixed(1)}M`\r\n\t}\r\n\toptions2.tooltip.y = {\r\n\t\tformatter: val => val.toLocaleString()\r\n\t}\r\n\r\n\tsoefinding.state.chart2 = {\r\n\t\toptions: options2,\r\n\t\tseries: qldAllSeries,\r\n\t\tchartactive: true,\r\n\t}\r\n\r\n\r\n\t// 3 pie, total in latest year for each region\r\n\tconst regionItems = soefinding.findingJson.data.filter(d => d[\"Waste region\"] != \"Queensland\")\r\n\tconst regionSeries = regionItems.map(d => d[latestYear])\r\n\tregionSeries.sort(function (a, b) {\r\n\t\treturn b - a\r\n\t})\r\n\r\n\tconst options3 = soefinding.getDefaultPieChartOptions()\r\n\toptions3.xaxis.categories = [\"Region\", \"Tonnes\"] //ndash\r\n\toptions3.labels = regionItems.map(d => d[\"Waste region\"].replace(\"-\", \"–\"))\r\n\toptions3.tooltip = {\r\n\t\ty: {\r\n\t\t\tformatter: (val, options) => {\r\n\t\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\r\n\t\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsoefinding.state.chart3 = {\r\n\t\toptions: options3,\r\n\t\tseries: regionSeries,\r\n\t\tchartactive: true,\r\n\t}\r\n\r\n\r\n\r\n\r\n\tnew Vue({\r\n\t\tel: \"#chartContainer\",\r\n\t\tdata: soefinding.state,\r\n\t\tcomputed: {\r\n\t\t\theading1: () => \"Household waste landfilled, by collection type\",\r\n\t\t\theading2: () => \"Trend in total household waste landfilled\",\r\n\t\t\theading3: () => `Proportion of household waste landfilled by region, ${latestYear.replace(\"-\", \"–\")}`, //ndash\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tformatter1: val => val?.toLocaleString() ?? \"\",\r\n\t\t}\r\n\t})\r\n})\r\n"],"mappings":"aAEA,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,GAAM,GAAW,WAAW,YAAY,KAAK,OAAO,MAAM,GACpD,EAAa,EAAS,EAAS,OAAS,GAIxC,EAAkB,AADP,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,iBAAmB,cAAgB,EAAE,iBAAmB,OAClF,IAAI,GAC7B,EACN,KAAM,EAAE,gBACR,KAAM,EAAS,IAAI,GAAK,EAAE,OAG5B,EAAgB,KAAK,SAAU,EAAG,EAAG,CACpC,MAAO,GAAE,KAAK,EAAE,KAAK,OAAS,GAAK,EAAE,KAAK,EAAE,KAAK,OAAS,KAI3D,GAAM,GAAW,WAAW,4BAC5B,EAAS,MAAM,QAAU,GACzB,EAAS,OAAO,aAAe,GAC/B,EAAS,MAAM,WAAa,EAAS,IAAI,GAAK,EAAE,QAAQ,IAAK,WAC7D,EAAS,MAAM,MAAM,KAAO,OAC5B,EAAS,MAAM,MAAM,KAAO,mBAC5B,EAAS,MAAM,OAAO,UAAY,GAC1B,GAAI,GAAM,KAAS,QAAQ,MAEnC,EAAS,QAAQ,EAAI,CACpB,UAAW,GAAO,EAAI,kBAGvB,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,EACR,YAAa,IAKd,GAAM,GAAS,WAAW,YAAY,KAAK,KAAK,GAAK,EAAE,iBAAmB,cAAgB,EAAE,iBAAmB,OACzG,EAAe,CAAC,CACrB,KAAM,QACN,KAAM,EAAS,IAAI,GAAK,EAAO,MAG1B,EAAW,WAAW,6BAC5B,EAAS,MAAM,WAAa,EAAS,IAAI,GAAK,EAAE,QAAQ,IAAK,WAC7D,EAAS,MAAM,MAAM,KAAO,OAC5B,EAAS,MAAM,MAAM,KAAO,mBAC5B,EAAS,MAAM,OAAO,UAAY,GAC1B,GAAI,GAAM,KAAS,QAAQ,MAEnC,EAAS,QAAQ,EAAI,CACpB,UAAW,GAAO,EAAI,kBAGvB,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,EACR,YAAa,IAKd,GAAM,GAAc,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,iBAAmB,cAC3E,EAAe,EAAY,IAAI,GAAK,EAAE,IAC5C,EAAa,KAAK,SAAU,EAAG,EAAG,CACjC,MAAO,GAAI,IAGZ,GAAM,GAAW,WAAW,4BAC5B,EAAS,MAAM,WAAa,CAAC,SAAU,UACvC,EAAS,OAAS,EAAY,IAAI,GAAK,EAAE,gBAAgB,QAAQ,IAAK,WACtE,EAAS,QAAU,CAClB,EAAG,CACF,UAAW,CAAC,EAAK,IAAY,CAC5B,GAAM,GAAU,EAAQ,QAAQ,cAAc,EAAQ,aAAa,GACnE,MAAO,GAAG,EAAI,qBAAqB,EAAQ,QAAQ,UAKtD,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,EACR,YAAa,IAMd,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,IAAM,iDAChB,SAAU,IAAM,4CAChB,SAAU,IAAM,uDAAuD,EAAW,QAAQ,IAAK,aAEhG,QAAS,CACR,WAAY,GAAI,CAtGnB,MAsGsB,0BAAK,mBAAL,OAAyB","names":[]}
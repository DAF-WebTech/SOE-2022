{"version":3,"sources":["../../../src/pollution/waste/interstate-commercial-industrial.js"],"sourcesContent":["\"use strict\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n\tconst yearKeys = soefinding.findingJson.meta.fields.slice(2, 6)\n\tconst latestYear = yearKeys[yearKeys.length - 1]\n\n\t// 1. stacked columns, waste by type\n\tlet wasteTypes = soefinding.findingJson.data.filter(d => d[\"Waste type\"] != \"All\")\n\twasteTypes.sort(function (a, b) {\n\t\treturn b[latestYear] - a[latestYear]\n\t})\n\tconst wasteTypeSeries = wasteTypes.map(d => {\n\t\treturn {\n\t\t\tname: d[\"Waste type\"],\n\t\t\tdata: yearKeys.map(y => d[y])\n\t\t}\n\t})\n\n\tconst options1 = soefinding.getDefaultStackedColumnChartOptions()\n\toptions1.xaxis.categories = yearKeys.map(y => y.replace(\"-\", \"–\")) // ndash\n\toptions1.xaxis.title.text = \"Year\"\n\tdelete options1.xaxis.tickPlacement\n\toptions1.yaxis.title.text = \"Tonnes\"\n\toptions1.yaxis.labels.formatter = val => `${val / 1000000}M`\n\toptions1.tooltip.y = {\n\t\tformatter: val => `${val.toLocaleString()}`\n\t}\n\n\n\tsoefinding.state.chart1 = {\n\t\toptions: options1,\n\t\tseries: wasteTypeSeries,\n\t\tchartactive: true,\n\t};\n\n\n\t//2. line chart,yearly trend\n\tconst wasteConstructionDemolition = soefinding.findingJson.data.find(d => d[\"Waste type\"] == \"Commercial and industrial\")\n\tconst wasteConstructionDemolitionSeries = [{ name: \"Tonnes\", data: yearKeys.map(y => wasteConstructionDemolition[y]) }]\n\n\tconst options2 = soefinding.getDefaultLineChartOptions()\n\toptions2.xaxis.categories = yearKeys.map(y => y.replace(\"-\", \"–\")) // ndash\n\toptions2.xaxis.title.text = \"Year\"\n\toptions2.xaxis.tickPlacement = \"between\"\n\toptions2.xaxis.axisTicks = { show: false }\n\toptions2.yaxis.title.text = \"Tonnes\"\n\toptions2.yaxis.labels.formatter = val => val < 1000000 ? `${val / 1000}K` : `${val / 1000000}M`\n\toptions2.tooltip.y = {\n\t\tformatter: val => `${val.toLocaleString()}`\n\t}\n\n\tsoefinding.state.chart2 = {\n\t\toptions: options2,\n\t\tseries: wasteConstructionDemolitionSeries,\n\t\tchartactive: true,\n\t};\n\n\n\t// 3. pie, latest, not sent to landfill \n\t//2018-19 Not sent to landfill\n\tconst LATEST_NOT_SENT = \"2018-19 Not sent to landfill\"\n\twasteTypes.sort(function (a, b) {\n\t\treturn b[LATEST_NOT_SENT] - a[LATEST_NOT_SENT]\n\t})\n\twasteTypes = wasteTypes.filter(d => d[LATEST_NOT_SENT] != null)\n\tconst notSentLandfillSeries = wasteTypes.map(d => d[LATEST_NOT_SENT])\n\n\tconst options3 = soefinding.getDefaultPieChartOptions()\n\toptions3.labels = wasteTypes.map(d => d[\"Waste type\"])\n\toptions3.xaxis.categories = [\"Waste type\", \"Tonnes\"] // not needed for chart, but vue uses them for table headings\n\toptions3.tooltip.y = {\n\t\tformatter: (val, options) => {\n\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\n\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\n\t\t}\n\t}\n\n\tsoefinding.state.chart3 = {\n\t\toptions: options3,\n\t\tseries: notSentLandfillSeries,\n\t\tchartactive: true,\n\t};\n\n\n\t// 4 stacked columns, latest year, other and landfill\n\tconst keys = [\"2018-19 Received by Landfill\", LATEST_NOT_SENT]\n\tconst latestOtherLandfillSeries = keys.map(k => {\n\t\treturn {\n\t\t\tname: k.replace(\"-\", \"–\"), // ndash\n\t\t\tdata: wasteTypes.map(d => d[k])\n\t\t}\n\t})\n\n\n\tconst options4 = soefinding.getDefaultColumnChartOptions()\n\toptions4.chart.stacked = true\n\toptions4.legend.inverseOrder = true\n\toptions4.xaxis.categories = wasteTypes.map(d => d[\"Waste type\"].split(\" \")) //keys\n\toptions4.xaxis.title.text = \"Type of interstate construction and demolition waste received\"\n\toptions4.xaxis.tickPlacement = \"between\"\n\toptions4.yaxis.title.text = \"Tonnes (million)\"\n\toptions4.yaxis.labels.formatter = val => {\n\t\tif (val == 0) return 0\n\t\tif (val >= 1000000) return \"1M\"\n\t\treturn `${val / 1000}K`\n\t}\n\toptions4.yaxis.labels.minWidth = 20\n\toptions4.tooltip.y = {\n\t\tformatter: val => `${(val)?.toLocaleString() ?? \"n/a\"}`\n\t}\n\n\tsoefinding.state.chart4 = {\n\t\toptions: options4,\n\t\tseries: latestOtherLandfillSeries,\n\t\tchartactive: true,\n\t};\n\n\tconst LATEST_YEAR = soefinding.findingJson.meta.fields[soefinding.findingJson.meta.fields.length - 1].replace(\"-\", \"–\") // endash\n\n\tnew Vue({\n\t\tel: \"#chartContainer\",\n\t\tdata: soefinding.state,\n\t\tcomputed: {\n\t\t\theading1: () => \"Interstate commercial and industrial waste received, by waste type\",\n\t\t\theading2: () => \"Trend in total interstate commercial and industrial waste received\",\n\t\t\theading3: () => `Proportion of interstate commercial and industrial waste received, ${LATEST_YEAR} Not sent to landfill`,\n\t\t\theading4: () => `Interstate commercial and industrial waste received by landfill and other, ${LATEST_YEAR}`\n\t\t},\n\t\tmethods: {\n\t\t\tformatter1: val => val?.toLocaleString() ?? \"\",\n\t\t\tonStackedRadioClick: function () {\n\t\t\t\tthis.chart1.options.chart.type = \"bar\"\n\t\t\t\tthis.chart1.options.chart.stacked = true\n\t\t\t},\n\t\t\tonLineRadioClick: function () {\n\t\t\t\tthis.chart1.options.chart.type = \"line\"\n\t\t\t\tthis.chart1.options.chart.stacked = false\n\t\t\t\tthis.chart1.options.markers = { size: 4 } // ignored by column chart\n\t\t\t\tthis.chart1.options.tooltip.shared = false\n\t\t\t}\n\t\t}\n\n\t})\n})\n"],"mappings":"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","names":[]}
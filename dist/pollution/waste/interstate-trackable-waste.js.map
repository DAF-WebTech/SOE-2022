{"version":3,"sources":["../../../src/pollution/waste/interstate-trackable-waste.js"],"sourcesContent":["\"use strict\"\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\tconst yearKeys = soefinding.findingJson.meta.fields.slice(2)\r\n\tconst latestYear = yearKeys[yearKeys.length - 1]\r\n\r\n\t//1. totals for each year\r\n\tconst totals = soefinding.findingJson.data.find(d => d[\"Waste description\"] == \"Total\")\r\n\r\n\tconst totalSeries = [{\r\n\t\tname: `Total`,\r\n\t\tdata: yearKeys.map(y => totals[y])\r\n\t}]\r\n\r\n\tconst options1 = soefinding.getDefaultBarChartOptions()\r\n\toptions1.xaxis.categories = yearKeys.map(y => y.replace(\"-\", \"–\")) // ndash\r\n\toptions1.xaxis.tickPlacement = \"between\"\r\n\toptions1.xaxis.title.text = \"Year\"\r\n\toptions1.yaxis.title.text = \"Tonnes\"\r\n\toptions1.yaxis.labels.formatter = val => {\r\n\t\treturn `${val / 1000}K`\r\n\t}\r\n\toptions1.tooltip.y = {\r\n\t\tformatter: val => val.toLocaleString()\r\n\t}\r\n\r\n\t// create vue instance for first chart\r\n\tsoefinding.state.chart1 = {\r\n\t\toptions: options1,\r\n\t\tseries: totalSeries,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\r\n\t// 2. latest year each waste type\r\n\tconst wasteTypes = {}\r\n\tsoefinding.findingJson.data.forEach(d => {\r\n\t\tif (d[\"Waste description\"] == \"Total\")\r\n\t\t\treturn\r\n\t\tif (!wasteTypes[d[\"Waste description\"]])\r\n\t\t\twasteTypes[d[\"Waste description\"]] = []\r\n\t\twasteTypes[d[\"Waste description\"]].push(d)\r\n\t})\r\n\r\n\tconst wasteTotalItems = Object.keys(wasteTypes).map(k => {\r\n\t\treturn {\r\n\t\t\tname: k,\r\n\t\t\tvalue: wasteTypes[k].reduce(function (acc, val) {\r\n\t\t\t\treturn acc + val[latestYear]\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t})\r\n\twasteTotalItems.sort(function (a, b) {\r\n\t\treturn b.value - a.value\r\n\t})\r\n\tconst wasteSeries = wasteTotalItems.map(d => d.value)\r\n\r\n\tconst options2 = soefinding.getDefaultPieChartOptions()\r\n\toptions2.colors = options2.colors.concat([\"#33b2df\", \"#546E7A\", \"#d4526e\", \"#13d8aa\", \"#A5978B\"])\r\n\toptions2.xaxis.categories = [\"Waste description\", latestYear.replace(\"-\", \"–\")] //ndash\r\n\toptions2.labels = wasteTotalItems.map(d => d.name)\r\n\toptions2.tooltip = {\r\n\t\ty: {\r\n\t\t\tformatter: (val, options) => {\r\n\t\t\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\r\n\t\t\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsoefinding.state.chart2 = {\r\n\t\toptions: options2,\r\n\t\tseries: wasteSeries,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\r\n\t//3. pie chart, tonnes from each state\r\n\tconst states = {}\r\n\tsoefinding.findingJson.data.forEach(d => {\r\n\t\tif (d.State == \"All\")\r\n\t\t\treturn\r\n\t\tif (!states[d.State])\r\n\t\t\tstates[d.State] = []\r\n\t\tstates[d.State].push(d)\r\n\t})\r\n\r\n\tconst stateTotalItems = Object.keys(states).map(k => {\r\n\t\treturn {\r\n\t\t\tname: k,\r\n\t\t\tvalue: states[k].reduce(function (acc, val) {\r\n\t\t\t\treturn acc + val[latestYear]\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t})\r\n\tstateTotalItems.sort(function (a, b) {\r\n\t\treturn b.value - a.value\r\n\t})\r\n\tconst stateTotalSeries = stateTotalItems.map(d => d.value)\r\n\r\n\tconst options3 = JSON.parse(JSON.stringify(options2))\r\n\toptions3.xaxis.categories[0] = \"State\"\r\n\toptions3.labels = stateTotalItems.map(d => d.name)\r\n\toptions3.tooltip.y.formatter = (val, options) => {\r\n\t\tconst percent = options.globals.seriesPercent[options.seriesIndex][0]\r\n\t\treturn `${val.toLocaleString()} (${percent.toFixed(1)}%)`\r\n\t}\r\n\r\n\tsoefinding.state.chart3 = {\r\n\t\toptions: options3,\r\n\t\tseries: stateTotalSeries,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\t// 4. stacked column, every state and waste type in the latest year\r\n\tconst stateTypeSeries = Object.keys(states).map(k => {\r\n\t\treturn {\r\n\t\t\tname: k,\r\n\t\t\tdata: states[k].map(d => d[latestYear])\r\n\t\t}\r\n\t})\r\n\tstateTypeSeries.sort(function (a, b) {\r\n\t\treturn b.data.reduce((a, c) => a + c) - a.data.reduce((a, c) => a + c)\r\n\t})\r\n\r\n    const options4 = soefinding.getDefaultBarChartOptions()\r\n    options4.chart.stacked = true\r\n    options4.tooltip.y = { formatter: val => val.toLocaleString() }\r\n    options4.xaxis.categories = Object.keys(wasteTypes) // ignored but table needs it\r\n    options4.xaxis.labels.formatter = val => val >= 1000 ? `${val / 1000}K` : val\r\n    options4.plotOptions = {\r\n          bar: {\r\n            horizontal: true\r\n          }\r\n    }\r\n    options4.xaxis.tickPlacement = \"between\"\r\n    options4.xaxis.title.text = \"Tonnes\"\r\n    options4.yaxis.labels.maxWidth = 400\r\n    options4.yaxis.title.text = \"Waste description\"\r\n\r\n\tsoefinding.state.chart4 = {\r\n\t\toptions: options4,\r\n\t\tseries: stateTypeSeries,\r\n\t\tchartactive: true,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tnew Vue({\r\n\t\tel: \"#chartContainer\",\r\n\t\tdata: soefinding.state,\r\n\t\tcomputed: {\r\n\t\t\theading1: () => \"Trackable waste received from interstate\",\r\n\t\t\theading2: () => `Proportion of trackable waste received from interstate by waste type, ${latestYear.replace(\"-\", \"–\")}`,\r\n\t\t\theading3: () => \"Proportion of trackable waste received from interstate by state, 2018–2019\",\r\n\t\t\theading4: () => `Trackable waste received from interstate by state and waste type, ${latestYear.replace(\"-\", \"–\")}`\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tformatter1: val => val.toLocaleString(),\r\n\t\t}\r\n\t})\r\n})\r\n"],"mappings":"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","names":[]}
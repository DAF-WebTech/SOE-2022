{"version":3,"sources":["../../../src/pollution/waste/litter-items-different.js"],"sourcesContent":["\"use strict\"\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n\tconst yearKeys = soefinding.findingJson.meta.fields.slice(2)\n\tconst latestYear = yearKeys[yearKeys.length - 1]\n\tconst extents = [\"Australia\", \"Queensland\"]\n\n\t// group sites\n\tconst sites = {}\n\tsoefinding.findingJson.data.forEach(d => {\n\t\tif (!sites[d.Site])\n\t\t\tsites[d.Site] = []\n\t\tsites[d.Site].push(d)\n\t})\n\n\t// 1 - 8, one line chart for each site\n\tconst headings = []\n\tconst options = soefinding.getDefaultLineChartOptions()\n\toptions.xaxis.axisTicks = { show: false }\n\toptions.xaxis.categories = yearKeys.map(y => [y.slice(0, 4) + \"–\", y.slice(5)]) // ndash\n\toptions.xaxis.labels.rotateAlways = false\n\toptions.xaxis.tickPlacement = \"between\"\n\toptions.xaxis.title.text = \"Year\"\n\toptions.xaxis.title.text = \"Year\"\n\toptions.yaxis.title.text = \"Number of items per 100m²\"\n\tObject.keys(sites).forEach((s, i) => {\n\t\tconst series = extents.map((e, i) => {\n\t\t\treturn {\n\t\t\t\tname: e,\n\t\t\t\tdata: yearKeys.map(y => sites[s][i][y])\n\t\t\t}\n\t\t})\n\n\t\tsoefinding.state[`chart${i + 1}`] = {\n\t\t\toptions: options,\n\t\t\tseries: series,\n\t\t\tchartactive: true,\n\t\t}\n\n\t\theadings.push(`${s} — Comparison of trends in litter count by Queensland and Australia`)\n\n\t})\n\n\n\n\t// 9. column, average litter count by site type\n\tconst averageSeries = extents.map(e => {\n\t\treturn {\n\t\t\tname: e,\n\t\t\tdata: soefinding.findingJson.data.filter(d => d.Extent == e).map(d => d[latestYear])\n\t\t}\n\t})\n\n\tconst options9 = soefinding.getDefaultBarChartOptions()\n\toptions9.xaxis.title.text = \"Site type\"\n\toptions9.xaxis.categories = soefinding.findingJson.data.filter(d => d.Extent == \"Queensland\").map(d => d.Site.split(\" \"))\n\toptions9.yaxis.title.text = \"Number of items per 100m²\"\n\n\tsoefinding.state.chart9 = {\n\t\toptions: options9,\n\t\tseries: averageSeries,\n\t\tchartactive: true,\n\t};\n\n\n\t// 10. column difference in percentage\n\t//const sites = soefinding.findingJson.data.filter(d => d.Extent == \"Queensland\").map(d => d.Site)\n\tconst percentSeries = [{\n\t\tname: \"Percentage\", data: Object.keys(sites).map(s => {\n\t\t\t//const extents = soefinding.findingJson.data.filter(d => d.Site == s)\n\t\t\treturn Math.round(100.0 - (sites[s][0][latestYear] / sites[s][1][latestYear] * 100.0))\n\t\t})\n\t}]\n\n\tconst options10 = JSON.parse(JSON.stringify(options9))\n\toptions10.yaxis.title.text = \"Percentage difference in count (%)\"\n\toptions10.tooltip.y = {\n\t\t\tformatter: function (val) {\n\t\t\t\treturn `${val < 0 ? '−' : ''}${Math.abs(val)}%` // a better minus sign\n\t\t\t}\n\t\t}\n\n\tsoefinding.state.chart10 = {\n\t\toptions: options10,\n\t\tseries: percentSeries,\n\t\tchartactive: true,\n\t};\n\n\n\n\tnew Vue({\n\t\tel: \"#chartContainer\",\n\t\tdata: soefinding.state,\n\t\tcomputed: {\n\t\t\theading1: () => headings[0],\n\t\t\theading2: () => headings[1],\n\t\t\theading3: () => headings[2],\n\t\t\theading4: () => headings[3],\n\t\t\theading5: () => headings[4],\n\t\t\theading6: () => headings[5],\n\t\t\theading7: () => headings[6],\n\t\t\theading8: () => headings[7],\n\t\t\theading9: () => `Average litter count by site type, ${latestYear.replace(\"-\", \"–\")}`,\n\t\t\theading10: () => `Percentage difference between Queensland and Australian counts by site type, ${latestYear.replace(\"-\", \"–\")}`,\n\t\t},\n\t\tmethods: {\n\t\t\tformatter1: val => val,\n\t\t\tformatter2: val => `${val < 0 ? '−' : ''}${Math.abs(val)}`, // a better minus sign\n\t\t}\n\t})\n})\n"],"mappings":"aAEA,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,KAAM,UAAW,WAAW,YAAY,KAAK,OAAO,MAAM,GAC1D,KAAM,YAAa,SAAS,SAAS,OAAS,GAC9C,KAAM,SAAU,CAAC,YAAa,cAG9B,KAAM,OAAQ,GACd,WAAW,YAAY,KAAK,QAAQ,GAAK,CACxC,GAAI,CAAC,MAAM,EAAE,MACZ,MAAM,EAAE,MAAQ,GACjB,MAAM,EAAE,MAAM,KAAK,KAIpB,KAAM,UAAW,GACjB,KAAM,SAAU,WAAW,6BAC3B,QAAQ,MAAM,UAAY,CAAE,KAAM,OAClC,QAAQ,MAAM,WAAa,SAAS,IAAI,GAAK,CAAC,EAAE,MAAM,EAAG,GAAK,SAAK,EAAE,MAAM,KAC3E,QAAQ,MAAM,OAAO,aAAe,MACpC,QAAQ,MAAM,cAAgB,UAC9B,QAAQ,MAAM,MAAM,KAAO,OAC3B,QAAQ,MAAM,MAAM,KAAO,OAC3B,QAAQ,MAAM,MAAM,KAAO,+BAC3B,OAAO,KAAK,OAAO,QAAQ,CAAC,EAAG,IAAM,CACpC,KAAM,QAAS,QAAQ,IAAI,CAAC,EAAG,KAAM,CACpC,MAAO,CACN,KAAM,EACN,KAAM,SAAS,IAAI,GAAK,MAAM,GAAG,IAAG,OAItC,WAAW,MAAM,QAAQ,EAAI,KAAO,CACnC,QACA,OACA,YAAa,MAGd,SAAS,KAAK,GAAG,+EAOlB,KAAM,eAAgB,QAAQ,IAAI,GAAK,CACtC,MAAO,CACN,KAAM,EACN,KAAM,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,QAAU,GAAG,IAAI,GAAK,EAAE,gBAI1E,KAAM,UAAW,WAAW,4BAC5B,SAAS,MAAM,MAAM,KAAO,YAC5B,SAAS,MAAM,WAAa,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,QAAU,cAAc,IAAI,GAAK,EAAE,KAAK,MAAM,MACpH,SAAS,MAAM,MAAM,KAAO,+BAE5B,WAAW,MAAM,OAAS,CACzB,QAAS,SACT,OAAQ,cACR,YAAa,MAMd,KAAM,eAAgB,CAAC,CACtB,KAAM,aAAc,KAAM,OAAO,KAAK,OAAO,IAAI,GAAK,CAErD,MAAO,MAAK,MAAM,IAAS,MAAM,GAAG,GAAG,YAAc,MAAM,GAAG,GAAG,YAAc,SAIjF,KAAM,WAAY,KAAK,MAAM,KAAK,UAAU,WAC5C,UAAU,MAAM,MAAM,KAAO,qCAC7B,UAAU,QAAQ,EAAI,CACpB,UAAW,SAAU,IAAK,CACzB,MAAO,GAAG,IAAM,EAAI,SAAM,KAAK,KAAK,IAAI,UAI3C,WAAW,MAAM,QAAU,CAC1B,QAAS,UACT,OAAQ,cACR,YAAa,MAKd,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,IAAM,SAAS,GACzB,SAAU,IAAM,SAAS,GACzB,SAAU,IAAM,SAAS,GACzB,SAAU,IAAM,SAAS,GACzB,SAAU,IAAM,SAAS,GACzB,SAAU,IAAM,SAAS,GACzB,SAAU,IAAM,SAAS,GACzB,SAAU,IAAM,SAAS,GACzB,SAAU,IAAM,sCAAsC,WAAW,QAAQ,IAAK,YAC9E,UAAW,IAAM,gFAAgF,WAAW,QAAQ,IAAK,aAE1H,QAAS,CACR,WAAY,KAAO,IACnB,WAAY,KAAO,GAAG,IAAM,EAAI,SAAM,KAAK,KAAK,IAAI","names":[]}
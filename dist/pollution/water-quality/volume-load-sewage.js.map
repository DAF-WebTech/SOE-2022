{"version":3,"sources":["../../../src/pollution/water-quality/volume-load-sewage.js"],"sourcesContent":["\"use strict\"\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n\tconst years = soefinding.findingJson.meta.fields.slice(2)\r\n\r\n\tsoefinding.findingContent.Queensland\r\n\r\n\tconst series1Keys = [\"Total Nitrogen (tonne)\", \"Total Phosphorus (tonne)\"]\r\n\tconst series1 = series1Keys.map(k => {\r\n\t\treturn {\r\n\t\t\tname: k,\r\n\t\t\tdata: years.map(y => soefinding.findingJson.data.filter(d => d.Variable == k).reduce((acc, curr) => {\r\n\t\t\t\treturn acc + curr[y]\r\n\t\t\t}, 0))\r\n\t\t}\r\n\t})\r\n\tsoefinding.findingContent.Queensland = { series1 }\r\n\r\n\tconst regions = [\"South East Queensland\", \"Great Barrier Reef\"]\r\n\tregions.forEach(r => {\r\n\t\tconst series1Items = soefinding.findingJson.data.filter(d => d.Region == r && d.Variable != \"Annual volume (GL)\")\r\n\t\tconst regionSeries1 = series1Items.map(d => {\r\n\t\t\treturn {\r\n\t\t\t\tname: d.Variable,\r\n\t\t\t\tdata: years.map(y => d[y])\r\n\t\t\t}\r\n\t\t})\r\n\t\tsoefinding.findingContent[r] = { series1: regionSeries1 }\r\n\t})\r\n\r\n\tconst options1 = soefinding.getDefaultColumnChartOptions()\r\n\toptions1.chart.id = \"chart1\"\r\n\toptions1.xaxis.categories = years\r\n\toptions1.xaxis.title.text = \"Year\"\r\n\toptions1.yaxis.title.text = \"Load (tonnes)\"\r\n\toptions1.yaxis.labels.formatter = val => val.toLocaleString()\r\n\r\n\r\n\tsoefinding.state.chart1 = {\r\n\t\toptions: options1,\r\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series1,\r\n\t\tchartactive: true,\r\n\t}\r\n\r\n\r\n\tsoefinding.findingContent.Queensland.series2 = []\r\n\tregions.forEach(r => {\r\n\r\n\t\tconst series2Item = soefinding.findingJson.data.find(d => d.Region == r && d.Variable == \"Annual volume (GL)\")\r\n\t\tconst item = {\r\n\t\t\tname: r,\r\n\t\t\tdata: years.map(y => series2Item[y])\r\n\t\t}\r\n\r\n\t\tsoefinding.findingContent.Queensland.series2.push(item)\r\n\r\n\t\tsoefinding.findingContent[r].series2 = [item]\r\n\t})\r\n\r\n\tconst options2 = soefinding.getDefaultLineChartOptions()\r\n\toptions2.chart.id = \"chart2\"\r\n\toptions2.xaxis.categories = years\r\n\toptions2.xaxis.title.text = \"Year\"\r\n\toptions2.yaxis.title.text = \"Annual Volume (gigalitres)\"\r\n\r\n\r\n\tsoefinding.state.chart2 = {\r\n\t\toptions: options2,\r\n\t\tseries: soefinding.findingContent[soefinding.state.currentRegionName].series2,\r\n\t\tchartactive: true,\r\n\t}\r\n\r\n\r\n\r\n\tnew Vue({\r\n\t\tel: \"#chartContainer\",\r\n\t\tdata: soefinding.state,\r\n\t\tcomputed: {\r\n\t\t\theading1: function () {\r\n\t\t\t\tlet retVal = \"Treated sewage total nitrogen and phosphorous\"\r\n\t\t\t\tif (this.currentRegionName == \"Queensland\")\r\n\t\t\t\t\tretVal += \" (for SEQ and GBR)\"\r\n\t\t\t\telse\r\n\t\t\t\t\tretVal += \" in \" + this.currentRegionName\r\n\t\t\t\treturn retVal\r\n\t\t\t},\r\n\t\t\theading2: function () {\r\n\t\t\t\tlet retVal = \"Trends in sewage load\"\r\n\t\t\t\tif (this.currentRegionName == \"Queensland\")\r\n\t\t\t\t\tretVal += \" volumes, by region\"\r\n\t\t\t\telse\r\n\t\t\t\t\tretVal += \" volume in \" + this.currentRegionName\r\n\t\t\t\treturn retVal\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tformatter1: val => val.toLocaleString()\r\n\t\t}\r\n\t})\r\n\r\n\r\n\twindow.soefinding.onRegionChange = function () {\r\n\t\t// set the data series in each of the vue apps, for the current region\r\n\r\n\t\t// chart 1\r\n\t\tApexCharts.exec(\"chart1\", \"updateSeries\", this.findingContent[this.state.currentRegionName].series1)\r\n\t\tsoefinding.state.chart1.series = this.findingContent[this.state.currentRegionName].series1\r\n\r\n\t\t// chart 1\r\n\t\tApexCharts.exec(\"chart2\", \"updateSeries\", this.findingContent[this.state.currentRegionName].series2)\r\n\t\tsoefinding.state.chart2.series = this.findingContent[this.state.currentRegionName].series2\r\n\r\n\r\n\t\tsoefinding.loadFindingHtml()\r\n\t}\r\n})"],"mappings":"aAEA,SAAS,iBAAiB,mBAAoB,UAAY,CAEzD,GAAM,GAAQ,WAAW,YAAY,KAAK,OAAO,MAAM,GAEvD,WAAW,eAAe,WAG1B,GAAM,GAAU,AADI,CAAC,yBAA0B,4BACnB,IAAI,GACxB,EACN,KAAM,EACN,KAAM,EAAM,IAAI,GAAK,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,UAAY,GAAG,OAAO,CAAC,EAAK,IACnF,EAAM,EAAK,GAChB,OAGL,WAAW,eAAe,WAAa,CAAE,WAEzC,GAAM,GAAU,CAAC,wBAAyB,sBAC1C,EAAQ,QAAQ,GAAK,CAEpB,GAAM,GAAgB,AADD,WAAW,YAAY,KAAK,OAAO,GAAK,EAAE,QAAU,GAAK,EAAE,UAAY,sBACzD,IAAI,GAC/B,EACN,KAAM,EAAE,SACR,KAAM,EAAM,IAAI,GAAK,EAAE,OAGzB,WAAW,eAAe,GAAK,CAAE,QAAS,KAG3C,GAAM,GAAW,WAAW,+BAC5B,EAAS,MAAM,GAAK,SACpB,EAAS,MAAM,WAAa,EAC5B,EAAS,MAAM,MAAM,KAAO,OAC5B,EAAS,MAAM,MAAM,KAAO,gBAC5B,EAAS,MAAM,OAAO,UAAY,GAAO,EAAI,iBAG7C,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,WAAW,eAAe,WAAW,MAAM,mBAAmB,QACtE,YAAa,IAId,WAAW,eAAe,WAAW,QAAU,GAC/C,EAAQ,QAAQ,GAAK,CAEpB,GAAM,GAAc,WAAW,YAAY,KAAK,KAAK,GAAK,EAAE,QAAU,GAAK,EAAE,UAAY,sBACnF,EAAO,CACZ,KAAM,EACN,KAAM,EAAM,IAAI,GAAK,EAAY,KAGlC,WAAW,eAAe,WAAW,QAAQ,KAAK,GAElD,WAAW,eAAe,GAAG,QAAU,CAAC,KAGzC,GAAM,GAAW,WAAW,6BAC5B,EAAS,MAAM,GAAK,SACpB,EAAS,MAAM,WAAa,EAC5B,EAAS,MAAM,MAAM,KAAO,OAC5B,EAAS,MAAM,MAAM,KAAO,6BAG5B,WAAW,MAAM,OAAS,CACzB,QAAS,EACT,OAAQ,WAAW,eAAe,WAAW,MAAM,mBAAmB,QACtE,YAAa,IAKd,GAAI,KAAI,CACP,GAAI,kBACJ,KAAM,WAAW,MACjB,SAAU,CACT,SAAU,UAAY,CACrB,GAAI,GAAS,gDACb,MAAI,MAAK,mBAAqB,aAC7B,GAAU,qBAEV,GAAU,OAAS,KAAK,kBAClB,GAER,SAAU,UAAY,CACrB,GAAI,GAAS,wBACb,MAAI,MAAK,mBAAqB,aAC7B,GAAU,sBAEV,GAAU,cAAgB,KAAK,kBACzB,IAGT,QAAS,CACR,WAAY,GAAO,EAAI,oBAKzB,OAAO,WAAW,eAAiB,UAAY,CAI9C,WAAW,KAAK,SAAU,eAAgB,KAAK,eAAe,KAAK,MAAM,mBAAmB,SAC5F,WAAW,MAAM,OAAO,OAAS,KAAK,eAAe,KAAK,MAAM,mBAAmB,QAGnF,WAAW,KAAK,SAAU,eAAgB,KAAK,eAAe,KAAK,MAAM,mBAAmB,SAC5F,WAAW,MAAM,OAAO,OAAS,KAAK,eAAe,KAAK,MAAM,mBAAmB,QAGnF,WAAW","names":[]}